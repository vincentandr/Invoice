{"version":3,"sources":["util.js","invoiceForm.js","assets/logo_with_text.png","invoice.js","assets/logo_with_text_rotated.png","receipt.js","reducer.js","receiptForm.js","App.js","reportWebVitals.js","index.js"],"names":["numberWithCommas","x","parts","toString","split","replace","getFieldsOnTable","fields","keys","Object","regex","RegExp","filter","key","test","calculateDiscount","data","discount","discountedItems","item","length","parseInt","reduce","sum","qty","price","Option","Select","EditableCell","editable","children","record","dataIndex","rowIndex","title","state","dispatch","restProps","formState","childNode","page","pagination","index","current","pageSize","Item","name","rules","required","message","initialValue","preserve","style","marginBottom","format","allowNegative","value","displayType","customInput","Input","width","textAlign","onValueChange","values","type","payload","val","column","valuePropName","disabled","buyerInfo","isNaN","defaultChecked","transform","onChange","e","target","checked","defaultValue","maxLength","onBlur","ItemsTable","props","components","body","cell","columns","align","render","text","_","idx","danger","onClick","removeItem","id","tableColumns","map","col","onCell","isButtonHidden","Math","ceil","span","offset","dataSource","toBeReset","form","getFieldsValue","validateFields","then","catch","err","console","log","changePage","rowKey","footer","fontWeight","subtotal","suffix","parseFloat","totalDiscount","onConfirm","setFieldsValue","code0","name0","discount0","qty0","price0","okText","cancelText","size","htmlType","hidden","newRow","count","code","unit","InvoiceForm","Form","useForm","layout","onFinish","submitHandler","scrollToFirstError","label","city","address","moment","date","due","flex","pull","number","note","TextArea","InvoiceToPrint","sizePerPage","this","dataLength","pageCount","invoicePages","i","startIndex","endIndex","lastPageItems","push","className","start","end","React","PureComponent","Header","src","logo","alt","BuyerCompany","Dates","TableItems","subset","slice","toLowerCase","outerIndex","innerIndex","colSpan","Footer","person","SignArea","Layout","Sider","Content","ReceiptToPrint","backgroundColor","height","fontSize","border","borderStyle","logo_rotated","direction","marginTop","receiptNumber","amountWritten","matter","giroNumber","amount","invoiceReducer","action","newItem","dataCopy","newItems","newVal","newCurrentPage","Error","receiptReducer","Receipt","handleFinish","useContext","ReceiptContext","justify","PayerName","context","receiptState","receiptDispatch","ReceiptNumber","ReceiptDate","GiroNumber","Amount","AmountWritten","Matter","SubmitButton","createContext","App","defaultInvoiceState","Date","add","defaultReceiptState","useState","setFormState","useReducer","invoiceState","invoiceDispatch","invoiceToPrint","useRef","receiptToPrint","useReactToPrint","content","pageStyle","overflow","ref","Group","buttonStyle","newOption","Button","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.997cddce.chunk.js","sourcesContent":["const numberWithCommas = (x) => {\r\n  var parts = x.toString().split(\".\");\r\n  parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n  return parts[0];\r\n  //return parts.join(\",\");\r\n};;\r\n\r\nconst getFieldsOnTable = (fields) => {\r\n  let keys = Object.keys(fields);\r\n  let regex = new RegExp(\"^code|^qty|^name|^price\");\r\n  return keys.filter((key) => regex.test(key));\r\n};\r\n\r\nconst calculateSubtotal = (data) => {\r\n  return parseInt(data.reduce((sum, item) => sum + item.qty * item.price, 0));\r\n};\r\n\r\nconst calculateDiscount = (data, discount) => {\r\n  let discountedItems = data.filter((item) => item.discount === true);\r\n\r\n  if (discountedItems.length > 0) {\r\n    return parseInt(\r\n      discountedItems.reduce(\r\n        (sum, item) => sum + (item.qty * item.price * discount) / 100,\r\n        0\r\n      )\r\n    );\r\n  }\r\n\r\n  return 0;\r\n};\r\n\r\nexport {\r\n  numberWithCommas,\r\n  getFieldsOnTable,\r\n  calculateSubtotal,\r\n  calculateDiscount,\r\n};\r\n","import {\r\n  Button,\r\n  Form,\r\n  Input,\r\n  DatePicker,\r\n  Row,\r\n  Col,\r\n  Popconfirm,\r\n  Checkbox,\r\n  Table,\r\n  Select,\r\n} from \"antd\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport moment from \"moment\";\r\nimport { numberWithCommas, getFieldsOnTable } from \"./util.js\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst InvoiceForm = (props) => {\r\n  const [form] = Form.useForm();\r\n\r\n  const handleFinish = () => {\r\n    console.log(form.getFieldsValue());\r\n\r\n    props.submitHandler();\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      layout=\"vertical\"\r\n      onFinish={handleFinish}\r\n      scrollToFirstError\r\n    >\r\n      <Row>\r\n        <Col span=\"13\" offset=\"1\">\r\n          <Form.Item\r\n            name=\"companyName\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Nama perusahaan tidak boleh kosong\",\r\n              },\r\n            ]}\r\n            label=\"Nama Perusahaan\"\r\n            initialValue={props.state.buyerInfo.name}\r\n          >\r\n            <Input\r\n              onBlur={(e) =>\r\n                props.dispatch({\r\n                  type: \"UPDATE_FORM_INPUT_VALUE\",\r\n                  payload: {\r\n                    name: \"name\",\r\n                    value: e.target.value,\r\n                  },\r\n                })\r\n              }\r\n            />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col span=\"8\" offset=\"1\">\r\n          <Form.Item\r\n            name=\"city\"\r\n            label=\"Kota\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Kota tidak boleh kosong\",\r\n              },\r\n            ]}\r\n            initialValue={props.state.buyerInfo.city}\r\n          >\r\n            <Input\r\n              onBlur={(e) =>\r\n                props.dispatch({\r\n                  type: \"UPDATE_FORM_INPUT_VALUE\",\r\n                  payload: {\r\n                    name: \"city\",\r\n                    value: e.target.value,\r\n                  },\r\n                })\r\n              }\r\n            />\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col span=\"22\" offset=\"1\">\r\n          <Form.Item\r\n            name=\"address\"\r\n            label=\"Alamat Perusahaan\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Alamat perusahaan tidak boleh kosong\",\r\n              },\r\n            ]}\r\n            initialValue={props.state.buyerInfo.address}\r\n          >\r\n            <Input\r\n              maxLength={80}\r\n              onBlur={(e) =>\r\n                props.dispatch({\r\n                  type: \"UPDATE_FORM_INPUT_VALUE\",\r\n                  payload: {\r\n                    name: \"address\",\r\n                    value: e.target.value,\r\n                  },\r\n                })\r\n              }\r\n            />\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col span=\"6\" offset=\"1\">\r\n          <Form.Item\r\n            name=\"date\"\r\n            label=\"Tanggal\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Tanggal tidak boleh kosong\",\r\n              },\r\n            ]}\r\n            initialValue={moment(props.state.buyerInfo.date, \"DD-MM-YYYY\")}\r\n          >\r\n            <DatePicker\r\n              format=\"DD-MM-YYYY\"\r\n              onBlur={(e) =>\r\n                props.dispatch({\r\n                  type: \"UPDATE_FORM_INPUT_VALUE\",\r\n                  payload: {\r\n                    name: \"date\",\r\n                    value: e.target.value,\r\n                  },\r\n                })\r\n              }\r\n            />\r\n          </Form.Item>\r\n        </Col>\r\n        {props.formState === \"faktur\" && (\r\n          <Col span=\"7\">\r\n            <Form.Item\r\n              name=\"due\"\r\n              label=\"Jatuh Tempo\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Jatuh tempo tidak boleh kosong\",\r\n                },\r\n              ]}\r\n              initialValue={moment(props.state.buyerInfo.due, \"DD-MM-YYYY\")}\r\n            >\r\n              <DatePicker\r\n                format=\"DD-MM-YYYY\"\r\n                onBlur={(e) =>\r\n                  props.dispatch({\r\n                    type: \"UPDATE_FORM_INPUT_VALUE\",\r\n                    payload: {\r\n                      name: \"due\",\r\n                      value: e.target.value,\r\n                    },\r\n                  })\r\n                }\r\n              />\r\n            </Form.Item>\r\n          </Col>\r\n        )}\r\n        <Col flex=\"auto\" pull=\"1\">\r\n          <Form.Item\r\n            name=\"number\"\r\n            label={\r\n              props.formState === \"faktur\"\r\n                ? \"Nomor Faktur Jual\"\r\n                : \"Nomor Surat Jalan\"\r\n            }\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Nomor faktur jual tidak boleh kosong\",\r\n              },\r\n            ]}\r\n            initialValue={props.state.buyerInfo.number}\r\n          >\r\n            <Input\r\n              onBlur={(e) =>\r\n                props.dispatch({\r\n                  type: \"UPDATE_FORM_INPUT_VALUE\",\r\n                  payload: {\r\n                    name: \"number\",\r\n                    value: e.target.value,\r\n                  },\r\n                })\r\n              }\r\n            />\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col span=\"22\" offset=\"1\">\r\n          <Form.Item\r\n            label=\"Keterangan\"\r\n            name=\"note\"\r\n            initialValue={props.state.buyerInfo.note}\r\n          >\r\n            <Input.TextArea\r\n              maxLength={120}\r\n              onBlur={(e) =>\r\n                props.dispatch({\r\n                  type: \"UPDATE_FORM_INPUT_VALUE\",\r\n                  payload: {\r\n                    name: \"note\",\r\n                    value: e.target.value,\r\n                  },\r\n                })\r\n              }\r\n            />\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n      <ItemsTable\r\n        dispatch={props.dispatch}\r\n        state={props.state}\r\n        form={form}\r\n        formState={props.formState}\r\n        isButtonHidden={props.isButtonHidden}\r\n      />\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst EditableCell = ({\r\n  editable,\r\n  record,\r\n  children,\r\n  dataIndex,\r\n  rowIndex,\r\n  title,\r\n  state,\r\n  dispatch,\r\n  formState,\r\n  ...restProps\r\n}) => {\r\n  let childNode = children;\r\n\r\n  if (editable) {\r\n    let page = { ...state.pagination };\r\n    let index = rowIndex + (page.current - 1) * page.pageSize;\r\n\r\n    if (dataIndex === \"qty\" || dataIndex === \"price\") {\r\n      childNode = (\r\n        <Form.Item\r\n          name={`${dataIndex}${index}`}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `${title} tidak boleh kosong`,\r\n            },\r\n          ]}\r\n          initialValue={state.data[index][dataIndex]}\r\n          preserve={false}\r\n          style={{ marginBottom: 0 }}\r\n        >\r\n          <NumberFormat\r\n            {...(dataIndex === \"price\"\r\n              ? {\r\n                  format: numberWithCommas,\r\n                  allowNegative: true,\r\n                }\r\n              : {\r\n                  allowNegative: false,\r\n                })}\r\n            value={state.data[index][dataIndex]}\r\n            displayType=\"input\"\r\n            customInput={Input}\r\n            style={{ width: \"100%\", textAlign: \"end\" }}\r\n            onValueChange={(values) => {\r\n              const { value } = values;\r\n              dispatch({\r\n                type: \"UPDATE_TABLE_INPUT_VALUE\",\r\n                payload: {\r\n                  val: parseInt(value),\r\n                  index: index,\r\n                  column: dataIndex,\r\n                },\r\n              });\r\n            }}\r\n          />\r\n        </Form.Item>\r\n      );\r\n    } else if (dataIndex === \"discount\") {\r\n      childNode = (\r\n        <Form.Item\r\n          name={`${dataIndex}${index}`}\r\n          valuePropName=\"checked\"\r\n          initialValue={state.data[index][dataIndex]}\r\n          preserve={false}\r\n          style={{ marginBottom: 0 }}\r\n        >\r\n          <Checkbox\r\n            disabled={state.buyerInfo.discount === 0 || isNaN(state.buyerInfo.discount)}\r\n            defaultChecked={state.data[index][dataIndex]}\r\n            style={{transform: \"scale(1.5)\" }}\r\n            onChange={(e) =>\r\n              dispatch({\r\n                type: \"UPDATE_TABLE_INPUT_VALUE\",\r\n                payload: {\r\n                  val: e.target.checked,\r\n                  index: index,\r\n                  column: dataIndex,\r\n                },\r\n              })\r\n            }\r\n          />\r\n        </Form.Item>\r\n      );\r\n    } else if (dataIndex === \"unit\"){\r\n      childNode = (\r\n        <Form.Item\r\n          name={`${dataIndex}${index}`}\r\n          initialValue={state.data[index][dataIndex]}\r\n          preserve={false}\r\n          style={{ marginBottom: 0 }}\r\n        >\r\n          <Select\r\n            defaultValue=\"buah\"\r\n            onChange={(value) =>\r\n              dispatch({\r\n                type: \"UPDATE_TABLE_INPUT_VALUE\",\r\n                payload: {\r\n                  val: value,\r\n                  index: index,\r\n                  column: dataIndex,\r\n                },\r\n              })\r\n            }\r\n          >\r\n            <Option value=\"buah\">buah</Option>\r\n            <Option value=\"set\">set</Option>\r\n          </Select>\r\n        </Form.Item>\r\n      );\r\n    } else {\r\n      childNode = (\r\n        <Form.Item\r\n          name={`${dataIndex}${index}`}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `${title} tidak boleh kosong`,\r\n            },\r\n          ]}\r\n          initialValue={state.data[index][dataIndex]}\r\n          preserve={false}\r\n          style={{ marginBottom: 0 }}\r\n        >\r\n          <Input\r\n            maxLength={60}\r\n            onBlur={(e) =>\r\n              dispatch({\r\n                type: \"UPDATE_TABLE_INPUT_VALUE\",\r\n                payload: {\r\n                  val: e.target.value,\r\n                  index: index,\r\n                  column: dataIndex,\r\n                },\r\n              })\r\n            }\r\n          />\r\n        </Form.Item>\r\n      );\r\n    }\r\n  }\r\n\r\n  return <td {...restProps}>{childNode}</td>;\r\n};\r\n\r\nconst ItemsTable = (props) => {\r\n  const components = {\r\n    body: {\r\n      cell: EditableCell,\r\n    },\r\n  };\r\n\r\n  var columns = [];\r\n\r\n  if (props.formState === \"faktur\") {\r\n    columns = [\r\n      {\r\n        title: props.state.columns[0],\r\n        dataIndex: \"id\",\r\n        width: \"5%\",\r\n      },\r\n      {\r\n        title: props.state.columns[1],\r\n        dataIndex: \"code\",\r\n        editable: true,\r\n        width: \"15%\",\r\n      },\r\n      {\r\n        title: props.state.columns[2],\r\n        dataIndex: \"name\",\r\n        editable: true,\r\n        width: \"20%\",\r\n      },\r\n      {\r\n        title: props.state.columns[3],\r\n        dataIndex: \"discount\",\r\n        editable: true,\r\n        width: \"5%\",\r\n      },\r\n      {\r\n        title: props.state.columns[4],\r\n        dataIndex: \"qty\",\r\n        editable: true,\r\n        width: \"8%\",\r\n        align: \"right\",\r\n      },\r\n      {\r\n        title: props.state.columns[5],\r\n        dataIndex: \"unit\",\r\n        editable: true,\r\n        width: \"10%\",\r\n      },\r\n      {\r\n        title: props.state.columns[6],\r\n        dataIndex: \"price\",\r\n        editable: true,\r\n        width: \"13%\",\r\n      },\r\n      {\r\n        title: props.state.columns[7],\r\n        dataIndex: \"total\",\r\n        align: \"right\",\r\n        width: \"14%\",\r\n        render: (text, _, index) => {\r\n          let idx =\r\n            index +\r\n            (props.state.pagination.current - 1) *\r\n              props.state.pagination.pageSize;\r\n          return (\r\n            <NumberFormat\r\n              format={numberWithCommas}\r\n              displayType=\"text\"\r\n              value={\r\n                isNaN(props.state.data[idx].qty) ||\r\n                isNaN(props.state.data[idx].price)\r\n                  ? 0\r\n                  : props.state.data[idx].qty * props.state.data[idx].price\r\n              }\r\n            />\r\n          );\r\n        },\r\n      },\r\n      {\r\n        title: \"Hapus\",\r\n        dataIndex: \"remove\",\r\n        render: (_, record) =>\r\n          props.state.data.length > 1 ? (\r\n            <Button type=\"default\" danger onClick={() => removeItem(record.id)}>\r\n              Hapus\r\n            </Button>\r\n          ) : null,\r\n      },\r\n    ];\r\n  } else if (props.formState === \"surat\") {\r\n    columns = [\r\n      {\r\n        title: props.state.columns[0],\r\n        dataIndex: \"id\",\r\n        width: \"5%\",\r\n      },\r\n      {\r\n        title: props.state.columns[1],\r\n        dataIndex: \"code\",\r\n        editable: true,\r\n        width: \"15%\",\r\n      },\r\n      {\r\n        title: props.state.columns[2],\r\n        dataIndex: \"name\",\r\n        editable: true,\r\n        width: \"50%\",\r\n      },\r\n      {\r\n        title: props.state.columns[3],\r\n        dataIndex: \"qty\",\r\n        editable: true,\r\n        width: \"10%\",\r\n        align: \"right\",\r\n      },\r\n      {\r\n        title: props.state.columns[4],\r\n        dataIndex: \"unit\",\r\n        editable: true,\r\n        width: \"10%\",\r\n      },\r\n      {\r\n        title: \"Hapus\",\r\n        dataIndex: \"remove\",\r\n        render: (_, record) =>\r\n          props.state.data.length > 1 ? (\r\n            <Button type=\"default\" danger onClick={() => removeItem(record.id)}>\r\n              Hapus\r\n            </Button>\r\n          ) : null,\r\n      },\r\n    ];\r\n  }\r\n\r\n  const tableColumns = columns.map((col) => {\r\n    if (!col.editable) {\r\n      return col;\r\n    }\r\n\r\n    return {\r\n      ...col,\r\n      onCell: (record, rowIndex) => ({\r\n        record,\r\n        rowIndex,\r\n        editable: col.editable,\r\n        dataIndex: col.dataIndex,\r\n        title: col.title,\r\n        state: props.state,\r\n        dispatch: props.dispatch,\r\n        formState: props.formState,\r\n      }),\r\n    };\r\n  });\r\n\r\n  const addItem = () => {\r\n    const toBeReset = getFieldsOnTable(props.form.getFieldsValue());\r\n\r\n    const newRow = {\r\n      id: props.state.data.length + 1,\r\n      count: props.state.data[props.state.data.length - 1].count + 1,\r\n      code: \"\",\r\n      name: \"\",\r\n      discount: false,\r\n      qty: 1,\r\n      unit: \"buah\",\r\n      price: 0,\r\n    };\r\n\r\n    // validate before adding new item creates a new page\r\n    if (props.state.data.length % props.state.pagination.pageSize === 0) {\r\n      props.form\r\n        .validateFields(toBeReset)\r\n        .then((values) => {\r\n          props.dispatch({ type: \"ADD_ITEM\", payload: newRow });\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"form values are missing\");\r\n        });\r\n    } else {\r\n      props.dispatch({ type: \"ADD_ITEM\", payload: newRow });\r\n    }\r\n  };\r\n\r\n  const removeItem = (id) => {\r\n    props.dispatch({ type: \"REMOVE_ITEM\", payload: id });\r\n  };\r\n\r\n  const removeAll = () => {\r\n    props.dispatch({ type: \"REMOVE_ALL\", payload: props.form });\r\n\r\n    // reset first row form values\r\n    props.form.setFieldsValue({\r\n      code0: \"\",\r\n      name0: \"\",\r\n      discount0: false,\r\n      qty0: 1,\r\n      price0: 0,\r\n    });\r\n  };\r\n\r\n  const changePage = (page) => {\r\n    const toBeReset = getFieldsOnTable(props.form.getFieldsValue());\r\n\r\n    props.form\r\n      .validateFields(toBeReset)\r\n      .then((values) => {\r\n        props.dispatch({ type: \"CHANGE_PAGE\", payload: page.current });\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"form values are missing\");\r\n      });\r\n  };\r\n\r\n  const isButtonHidden = () => {\r\n    return (\r\n      Math.ceil(props.state.data.length / props.state.pagination.pageSize) !==\r\n        props.state.pagination.current && props.formState !== \"kwitansi\"\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col span=\"22\" offset=\"1\">\r\n          <Table\r\n            components={components}\r\n            dataSource={props.state.data}\r\n            columns={tableColumns}\r\n            pagination={props.state.pagination}\r\n            onChange={(pagination) => changePage(pagination)}\r\n            rowKey=\"count\"\r\n            {...(props.formState === \"faktur\" && {\r\n              footer: () => {\r\n                return (\r\n                  <div style={{ fontWeight: \"bold\" }}>\r\n                    <Row>\r\n                      <Col offset=\"15\" span=\"3\">\r\n                        Subtotal\r\n                      </Col>\r\n                      <Col span=\"3\" offset=\"3\" style={{ textAlign: \"end\" }}>\r\n                        <NumberFormat\r\n                          displayType=\"text\"\r\n                          format={numberWithCommas}\r\n                          value={\r\n                            isNaN(props.state.buyerInfo.subtotal)\r\n                              ? 0\r\n                              : props.state.buyerInfo.subtotal\r\n                          }\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                    <Row align=\"middle\">\r\n                      <Col offset=\"15\" span=\"3\">\r\n                        Discount\r\n                      </Col>\r\n                      <Col span=\"2\">\r\n                        <Form.Item\r\n                          name=\"discount\"\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: \"Discount tidak boleh kosong\",\r\n                            },\r\n                          ]}\r\n                          initialValue={props.state.buyerInfo.discount}\r\n                          style={{ marginBottom: 0, fontWeight: \"normal\" }}\r\n                        >\r\n                          <NumberFormat\r\n                            suffix=\"%\"\r\n                            customInput={Input}\r\n                            displayType=\"input\"\r\n                            allowNegative={false}\r\n                            value={props.state.buyerInfo.discount}\r\n                            style={{ textAlign: \"end\" }}\r\n                            onValueChange={(values) => {\r\n                              const { value } = values;\r\n                              props.dispatch({\r\n                                type: \"UPDATE_FORM_INPUT_VALUE\",\r\n                                payload: {\r\n                                  name: \"discount\",\r\n                                  value: parseFloat(value),\r\n                                },\r\n                              });\r\n                            }}\r\n                          />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col span=\"3\" offset=\"1\" style={{ textAlign: \"end\" }}>\r\n                        <NumberFormat\r\n                          displayType=\"text\"\r\n                          format={numberWithCommas}\r\n                          value={\r\n                            isNaN(props.state.buyerInfo.totalDiscount)\r\n                              ? 0\r\n                              : props.state.buyerInfo.totalDiscount\r\n                          }\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col offset=\"15\" span=\"3\">\r\n                        Grand Total\r\n                      </Col>\r\n                      <Col span=\"3\" offset=\"3\" style={{ textAlign: \"end\" }}>\r\n                        <NumberFormat\r\n                          displayType=\"text\"\r\n                          format={numberWithCommas}\r\n                          value={\r\n                            isNaN(props.state.buyerInfo.totalDiscount) ||\r\n                            isNaN(props.state.buyerInfo.subtotal)\r\n                              ? 0\r\n                              : props.state.buyerInfo.subtotal -\r\n                                props.state.buyerInfo.totalDiscount\r\n                          }\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                );\r\n              },\r\n            })}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col offset=\"1\" span=\"5\">\r\n          <Popconfirm\r\n            title=\"Yakin ingin hapus semua barang?\"\r\n            onConfirm={removeAll}\r\n            okText=\"Yes\"\r\n            cancelText=\"No\"\r\n          >\r\n            <Button type=\"default\" size=\"large\" htmlType=\"button\" danger>\r\n              Hapus Semua Barang\r\n            </Button>\r\n          </Popconfirm>\r\n        </Col>\r\n        <Col span=\"5\">\r\n          <Col>\r\n            <Button\r\n              type=\"default\"\r\n              size=\"large\"\r\n              htmlType=\"button\"\r\n              hidden={isButtonHidden()}\r\n              onClick={addItem}\r\n            >\r\n              Tambah Barang Baru\r\n            </Button>\r\n          </Col>\r\n        </Col>\r\n        <Col offset=\"10\" span=\"3\">\r\n          <Form.Item style={{ marginBottom: 0 }}>\r\n            <Button\r\n              type=\"primary\"\r\n              size=\"large\"\r\n              htmlType=\"submit\"\r\n              hidden={isButtonHidden()}\r\n            >\r\n              Generate\r\n            </Button>\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InvoiceForm;\r\n","export default __webpack_public_path__ + \"static/media/logo_with_text.def95dbe.png\";","import React from \"react\";\r\nimport { numberWithCommas } from \"./util.js\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport logo from \"./assets/logo_with_text.png\";\r\n\r\nconst invoiceStyle = `\r\n @media print {  \r\n   html *{\r\n      font-family: \"Trebuchet MS\";\r\n    }\r\n      @page { \r\n      size: 21cm 13.97cm;\r\n    } \r\n    .numeric{\r\n      text-align:right;\r\n    }\r\n    .page-break{\r\n      page-break-before: always;\r\n      page-break-after: always;\r\n      display: block;\r\n    }\r\n\r\n    #title{\r\n      text-align: center;\r\n    }\r\n\r\n    .invoice{\r\n      font-size: 0.8em;\r\n    }\r\n    \r\n    #pageNo{\r\n      padding-left: 10%;\r\n    }\r\n    #buyerCompany{\r\n      width: 66%;\r\n    }\r\n    .column{\r\n      display: inline-block;\r\n      width: 33%;\r\n      margin-bottom: 0.5em;\r\n    }\r\n    \r\n    .info {\r\n      display: table;\r\n    }\r\n    .info h3 {\r\n      display: table-row;\r\n    }\r\n    .info span{\r\n      display: table-cell;\r\n      padding-right: 2mm;\r\n      padding-top: 1.5mm;\r\n    }\r\n     table{\r\n        width: 100%;\r\n        height:17.5em;\r\n        font-size: 1.2em;\r\n        border-top: solid 1px black;\r\n      }\r\n      table tr{\r\n        height:1em;\r\n      }\r\n      table tr:last-child{\r\n        height:auto;\r\n        border-bottom: solid 1px black;\r\n      }\r\n      table td, table th{\r\n        border-left: solid 1px black;\r\n        border-right: solid 1px black;\r\n        padding-left: 1mm;\r\n        padding-right: 1mm;\r\n        vertical-align:text-top; \r\n      }\r\n      table, table th{\r\n        border-bottom: solid 1px black;\r\n      }\r\n      table, table th{\r\n        border: solid 1px black;\r\n      }\r\n      table #note td, table #subtotal td, table #discount td{\r\n        border-top: none;\r\n        border-bottom: none;\r\n      }\r\n       table #grandTotal td{\r\n         border-bottom: solid 1px black;\r\n         font-weight: bold;\r\n       }\r\n      table #note{\r\n        height: 1.5em;\r\n        overflow: hidden;\r\n      }\r\n\r\n      h3 {\r\n        line-height:0.8em;\r\n      }\r\n      footer {\r\n        display: flex;\r\n        position:fixed;\r\n        bottom: 0;\r\n        left: 25%;\r\n        text-align:center;\r\n      }\r\n      .sign:nth-child(2){\r\n        margin-left: 5em;\r\n      }\r\n      \r\n      .sign:last-child{\r\n        margin-left: 5em;\r\n      }\r\n      .sign h3{\r\n        padding-bottom: 3em;\r\n      }\r\n  }\r\n  `;\r\n\r\nclass InvoiceToPrint extends React.PureComponent {\r\n  render() {\r\n    let sizePerPage = 8; // 8 items per print page\r\n\r\n    if(this.props.formState === \"surat\"){ // surat jalan tidak ada subtotal / grand total / discount, jadi baris barang bisa muat lbh banyak\r\n      sizePerPage = 10;\r\n    }\r\n\r\n    let dataLength = this.props.state.data.length; // items count\r\n    let pageCount = Math.ceil(dataLength / sizePerPage); // page count\r\n\r\n    let invoicePages = [];\r\n\r\n    for (var i = 0; i < pageCount; i++) {\r\n      let startIndex = i * sizePerPage; // start index for item slicing, if sizeperpage = 10 then startindex 0, 10, 20, ...\r\n      let endIndex = startIndex + sizePerPage; // end index for item slicing\r\n      let lastPageItems = dataLength % sizePerPage; // item count for last page, maybe lower than sizeperpage\r\n      if (i === pageCount - 1 && lastPageItems !== 0) {\r\n        // if last page and last page item count != sizeperpage\r\n        endIndex = startIndex + lastPageItems;\r\n      }\r\n      invoicePages.push(\r\n        <div className=\"invoice page-break\" key={`page${i + 1}`}>\r\n          <Header\r\n            {...this.props.state.buyerInfo}\r\n            formState={this.props.formState}\r\n            page={i + 1}\r\n            pageCount={pageCount}\r\n          />\r\n          <BuyerCompany {...this.props.state.buyerInfo} />\r\n          <Dates\r\n            {...this.props.state.buyerInfo}\r\n            formState={this.props.formState}\r\n          />\r\n          <TableItems {...this.props} start={startIndex} end={endIndex} />\r\n          <Footer {...this.props.state} formState={this.props.formState} />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return <div>{invoicePages}</div>;\r\n  }\r\n}\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <div>\r\n      <div className=\"column\">\r\n        <img src={logo} alt=\"logo\" />\r\n      </div>\r\n      <h1 id=\"title\" className=\"column\">\r\n        {props.formState === \"faktur\" && \"FAKTUR PENJUALAN\"}\r\n        {props.formState === \"surat\" && \"SURAT JALAN\"}\r\n      </h1>\r\n      <h3 id=\"pageNo\" className=\"column\">\r\n        Page {props.page} of {props.pageCount}\r\n      </h3>\r\n    </div>\r\n  );\r\n};\r\n\r\n// const SellerCompany = () => {\r\n//   return (\r\n//     <div id=\"sellerCompany\" className=\"column\">\r\n//       <h3>UD. Maju Jaya Diesel</h3>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\nconst BuyerCompany = (props) => {\r\n  return (\r\n    <div id=\"buyerCompany\" className=\"column\">\r\n      <h3>Kepada Yth.</h3>\r\n      <h3>{props.name}</h3>\r\n      <h3>{props.address}</h3>\r\n      <h3>{props.city}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Dates = (props) => {\r\n  return (\r\n    <div className=\"column\">\r\n      <div className=\"info\">\r\n        <h3>\r\n          <span>\r\n            No. { props.formState }\r\n          </span>: {props.number}\r\n        </h3>\r\n        <h3>\r\n          <span>Tanggal dokumen</span>: {props.date}\r\n        </h3>\r\n        { props.formState === \"faktur\" &&\r\n          <h3>\r\n            <span>Jatuh tempo (30 hari)</span>: {props.due}\r\n          </h3>\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst TableItems = (props) => {\r\n  let startIndex = props.start;\r\n  let endIndex = props.end;\r\n  let subset = props.state.data.slice(startIndex, endIndex);\r\n\r\n  return (\r\n    <table id=\"innerTable\">\r\n      {/* Columns width based on faktur / surat jalan (w/o price & total) */}\r\n      {props.formState === \"faktur\" ? (\r\n        <colgroup>\r\n          <col span=\"1\" style={{ width: \"5%\" }} />\r\n          <col span=\"1\" style={{ width: \"20%\" }} />\r\n          <col span=\"1\" style={{ width: \"35%\" }} />\r\n          <col span=\"1\" style={{ width: \"5%\" }} />\r\n          <col span=\"1\" style={{ width: \"5%\" }} />\r\n          <col span=\"1\" style={{ width: \"10%\" }} />\r\n          <col span=\"1\" style={{ width: \"10%\" }} />\r\n          <col span=\"1\" style={{ width: \"15%\" }} />\r\n        </colgroup>\r\n      ) : (\r\n        <colgroup>\r\n          <col span=\"1\" style={{ width: \"5%\" }} />\r\n          <col span=\"1\" style={{ width: \"20%\" }} />\r\n          <col span=\"1\" style={{ width: \"60%\" }} />\r\n          <col span=\"1\" style={{ width: \"5%\" }} />\r\n          <col span=\"1\" style={{ width: \"10%\" }} />\r\n        </colgroup>\r\n      )}\r\n      <thead>\r\n        <tr>\r\n          {props.state.columns.map((column, index) => (\r\n            <th\r\n              key={index}\r\n              {...((column.toLowerCase() === \"harga\" ||\r\n                column.toLowerCase() === \"total\" ||\r\n                column.toLowerCase() === \"qty\") && {\r\n                className: \"numeric\",\r\n              })}\r\n            >\r\n              {column}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {subset.map((item, outerIndex) => {\r\n          return (\r\n            <tr key={outerIndex} className=\"items\">\r\n              {Object.keys(item).map((column, innerIndex) => {\r\n                if (\r\n                  column !== \"count\" &&\r\n                  ((column !== \"price\" &&\r\n                    column !== \"discount\" &&\r\n                    props.formState === \"surat\") ||\r\n                    props.formState === \"faktur\")\r\n                )\r\n                  // Column based on keys of data object\r\n                  return (\r\n                    <td\r\n                      key={innerIndex}\r\n                      {...((column === \"price\" || column === \"qty\") && {\r\n                        className: \"numeric\",\r\n                      })}\r\n                    >\r\n                      {column === \"price\" ? (\r\n                        <NumberFormat\r\n                          format={numberWithCommas}\r\n                          displayType=\"text\"\r\n                          value={isNaN(item[column]) ? 0 : item[column]}\r\n                        />\r\n                      ) : column === \"qty\" && isNaN(item[column]) ? (\r\n                        0\r\n                      ) : column === \"discount\" ? (\r\n                        item.discount &&\r\n                        props.state.buyerInfo.discount !== 0 ? (\r\n                          `${props.state.buyerInfo.discount}%`\r\n                        ) : (\r\n                          \"-\"\r\n                        )\r\n                      ) : (\r\n                        item[column]\r\n                      )}\r\n                    </td>\r\n                  );\r\n                return undefined;\r\n              })}\r\n\r\n              {/* Total column */}\r\n\r\n              {props.formState === \"faktur\" && (\r\n                <td className=\"numeric\">\r\n                  <NumberFormat\r\n                    format={numberWithCommas}\r\n                    displayType=\"text\"\r\n                    value={\r\n                      isNaN(item.qty) || isNaN(item.price)\r\n                        ? 0\r\n                        : item.qty * item.price\r\n                    }\r\n                  />\r\n                </td>\r\n              )}\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n      <tfoot>\r\n        {/* Subtotal, Discount, Grand total, Note only on faktur */}\r\n        {props.formState === \"faktur\" && (\r\n          <>\r\n            <tr className=\"numeric\" id=\"subtotal\">\r\n              <td colSpan=\"7\">Subtotal</td>\r\n              <td>{numberWithCommas(props.state.buyerInfo.subtotal)}</td>\r\n            </tr>\r\n            <tr className=\"numeric\" id=\"discount\">\r\n              <td colSpan=\"7\">\r\n                {`Discount (${props.state.buyerInfo.discount}%)`}\r\n              </td>\r\n              <td>{numberWithCommas(props.state.buyerInfo.totalDiscount)}</td>\r\n            </tr>\r\n            <tr className=\"numeric\" id=\"grandTotal\">\r\n              <td colSpan=\"7\">Grand total</td>\r\n              <td>\r\n                {numberWithCommas(\r\n                  parseInt(props.state.buyerInfo.subtotal) -\r\n                    parseInt(props.state.buyerInfo.totalDiscount)\r\n                )}\r\n              </td>\r\n            </tr>\r\n          </>\r\n        )}\r\n        <tr>\r\n          <td colSpan={props.formState === \"faktur\" ? 8 : 5}>\r\n            <div id=\"note\">\r\n              Keterangan:&nbsp;\r\n              {props.state.buyerInfo.note}\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      </tfoot>\r\n    </table>\r\n  );\r\n};\r\n\r\nconst Footer = (props) => {\r\n  return (\r\n    <footer>\r\n      <SignArea person=\"Penerima\" />\r\n      <SignArea\r\n        person={props.formState === \"faktur\" ? \"Penjual\" : \"Hormat kami\"}\r\n      />\r\n      <SignArea person=\"Checklist\" />\r\n    </footer>\r\n  );\r\n};\r\n\r\nconst SignArea = ({ person }) => {\r\n  return (\r\n    <div className=\"sign\">\r\n      <h3>{person}</h3>\r\n      <span>________________</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { InvoiceToPrint, invoiceStyle };\r\n","export default __webpack_public_path__ + \"static/media/logo_with_text_rotated.0b99caeb.png\";","import React from \"react\";\r\nimport logo_rotated from \"./assets/logo_with_text_rotated.png\";\r\nimport { numberWithCommas } from \"./util.js\";\r\nimport {Row, Col, Layout, Space} from \"antd\";\r\n\r\nconst {Header, Sider, Content} = Layout;\r\n\r\nconst receiptStyle = `\r\n    @media print{\r\n      html *{\r\n        font-family: \"Trebuchet MS\";\r\n        font-size: 0.97em;\r\n      }\r\n      \r\n      @page { \r\n        size: 21.59cm 13.97cm;\r\n      }\r\n\r\n      h1 {\r\n        font-size: 2em;\r\n      }\r\n\r\n      #logo{\r\n        position: absolute;\r\n        bottom: 7%;\r\n        text-align: center; \r\n        left: 0;\r\n        right: 0;\r\n      }\r\n\r\n      .field {\r\n        border-bottom: solid 2px black;\r\n      }\r\n\r\n      #textarea{\r\n        position: absolute;\r\n        word-wrap: break-word;\r\n        line-height: 2.1em;\r\n        top: -1mm;\r\n      }\r\n\r\n      .footer{\r\n        font-size: 0.8em;\r\n      }\r\n    }\r\n`;\r\n\r\n// const setTextareaString = (text) => {\r\n//   var textareas = document.getElementsByClassName(\"textarea\");\r\n\r\n//   if(textareas !== undefined && text.length > 0 && textareas.length > 0){\r\n//     var words = text.split(\" \");\r\n\r\n//     for(var i=0;i<3;i++){\r\n//       textareas[i].innerHTML = \"&nbsp;\";\r\n//     }\r\n\r\n//     for(var i=0, j=0, count=0; i<words.length;i++){\r\n//       if(words[i].length <= 37){\r\n//         count += words[i].length + 1;\r\n\r\n//         if(count > 45){\r\n//           count = words[i].length;\r\n//           j++;\r\n//         }\r\n\r\n//         textareas[j].append(words[i] + \" \");\r\n//       }else{\r\n//         var splits = words[i].match(/.{1,37}/g);\r\n\r\n//         for(var k=0;k<splits.length;k++){\r\n//           if(count > 0){\r\n//             j++;\r\n//           }\r\n\r\n//           textareas[j+k].append(splits[k] + \" \");\r\n//         }\r\n//       }\r\n//     }\r\n//   }\r\n// }\r\n\r\nclass ReceiptToPrint extends React.PureComponent {\r\n  render() {\r\n      // setTextareaString(this.props.state.data.matter);\r\n      return (\r\n        <Layout\r\n          style={{\r\n            backgroundColor: \"transparent\",\r\n            height: \"99%\",\r\n            fontSize: \"1.2em\",\r\n          }}\r\n        >\r\n          <Sider\r\n            width=\"15%\"\r\n            style={{\r\n              backgroundColor: \"transparent\",\r\n              border: \"solid 4px black\",\r\n              borderStyle: \"double\",\r\n            }}\r\n          >\r\n            <div id=\"logo\">\r\n              <img src={logo_rotated} alt=\"logo\" />\r\n            </div>\r\n          </Sider>\r\n          <Layout\r\n            style={{\r\n              backgroundColor: \"transparent\",\r\n              border: \"solid 1px black\",\r\n            }}\r\n          >\r\n            <Header\r\n              style={{\r\n                backgroundColor: \"transparent\",\r\n                border: \"solid 1px black\",\r\n              }}\r\n            >\r\n              <h1>Kwitansi</h1>\r\n            </Header>\r\n\r\n            <Content\r\n              style={{\r\n                backgroundColor: \"transparent\",\r\n                border: \"solid 1px black\",\r\n                height: \"40%\",\r\n              }}\r\n            >\r\n              <Space\r\n                direction=\"vertical\"\r\n                size=\"small\"\r\n                style={{ width: \"100%\" }}\r\n              >\r\n                <Row style={{ marginTop: \"1em\" }}>\r\n                  <Col span=\"5\" offset=\"1\">\r\n                    No. kwitansi\r\n                  </Col>\r\n                  <Col span=\"1\">:</Col>\r\n                  <Col className=\"field\" span=\"15\">\r\n                    {this.props.state.data.receiptNumber}\r\n                  </Col>\r\n                </Row>\r\n                <Row align=\"bottom\">\r\n                  <Col span=\"5\" offset=\"1\">\r\n                    Sudah terima dari\r\n                  </Col>\r\n                  <Col span=\"1\">:</Col>\r\n                  <Col className=\"field\" span=\"15\">\r\n                    {this.props.state.data.name}\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col span=\"5\" offset=\"1\">\r\n                    Banyaknya uang\r\n                  </Col>\r\n                  <Col span=\"1\">:</Col>\r\n                  <Col className=\"field\" span=\"15\">\r\n                    <div id=\"textarea\">\r\n                      {this.props.state.data.amountWritten}\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col className=\"field\" offset=\"7\" span=\"15\">\r\n                    &nbsp;\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col span=\"5\" offset=\"1\">\r\n                    Untuk pembayaran\r\n                  </Col>\r\n                  <Col span=\"1\">:</Col>\r\n                  <Col className=\"field\" span=\"15\">\r\n                    <div id=\"textarea\">{this.props.state.data.matter}</div>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col className=\"field\" offset=\"7\" span=\"15\">\r\n                    &nbsp;\r\n                  </Col>\r\n                </Row>\r\n                <Space\r\n                  direction=\"vertical\"\r\n                  size=\"large\"\r\n                  style={{ width: \"100%\" }}\r\n                >\r\n                  <Row>\r\n                    <Col className=\"field\" offset=\"7\" span=\"15\">\r\n                      &nbsp;\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col\r\n                      className=\"field\"\r\n                      offset=\"16\"\r\n                      span=\"5\"\r\n                      style={{ textAlign: \"center\" }}\r\n                    >\r\n                      {this.props.state.data.date}\r\n                    </Col>\r\n                  </Row>\r\n                </Space>\r\n                <Row>\r\n                  <Col>&nbsp;</Col>\r\n                </Row>\r\n                <Row className=\"footer\">\r\n                  <Col offset=\"1\" span=\"4\">\r\n                    Cek / Giro No.\r\n                  </Col>\r\n                  <Col className=\"field\" span=\"6\">\r\n                    {this.props.state.data.giroNumber}\r\n                  </Col>\r\n                </Row>\r\n                <Row className=\"footer\">\r\n                  <Col offset=\"1\" span=\"4\">\r\n                    Jumlah\r\n                  </Col>\r\n                  <Col className=\"field\" span=\"6\">\r\n                    Rp.&nbsp;{numberWithCommas(this.props.state.data.amount)}\r\n                  </Col>\r\n                  <Col className=\"field\" offset=\"16\" span=\"5\"></Col>\r\n                </Row>\r\n              </Space>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      );\r\n  }\r\n}\r\n\r\nexport {ReceiptToPrint, receiptStyle};","import { calculateSubtotal, calculateDiscount } from \"./util.js\";\r\n\r\nconst invoiceReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_ITEM\": {\r\n      let newItem = action.payload;\r\n\r\n      let dataLength = [...state.data].length;\r\n\r\n      let pageSize = state.pagination.pageSize;\r\n\r\n      let current = Math.ceil((dataLength + 1) / pageSize);\r\n\r\n      return {\r\n        ...state,\r\n        data: [...state.data, newItem],\r\n        pagination: { ...state.pagination, current: current },\r\n      };\r\n    }\r\n    case \"REMOVE_ITEM\": {\r\n      let id = action.payload;\r\n\r\n      let dataCopy = [...state.data];\r\n\r\n      let pageCount = Math.ceil(dataCopy.length / state.pagination.pageSize);\r\n\r\n      let newItems = dataCopy.filter((item) => item.id !== id);\r\n\r\n      // reorder id after removing\r\n      for (var i = id - 1; i < newItems.length; i++) {\r\n        newItems[i].id = newItems[i].id - 1;\r\n      }\r\n\r\n      let current = state.pagination.current;\r\n\r\n      // redirect to previous page if the deleted item is the first and only item of last page\r\n      if (\r\n        newItems.length % state.pagination.pageSize === 0 &&\r\n        pageCount === current\r\n      )\r\n        current = current - 1;\r\n      return {\r\n        ...state,\r\n        data: newItems,\r\n        pagination: { ...state.pagination, current: current },\r\n      };\r\n    }\r\n    case \"REMOVE_ALL\": {\r\n      return {\r\n        ...state,\r\n        data: [\r\n          {\r\n            id: 1,\r\n            count: 1,\r\n            code: \"\",\r\n            name: \"\",\r\n            discount: false,\r\n            qty: 1,\r\n            price: 0,\r\n          },\r\n        ],\r\n        buyerInfo: { ...state.buyerInfo, subtotal: 0, totalDiscount: 0 },\r\n        pagination: {\r\n          ...state.pagination,\r\n          current: 1,\r\n        },\r\n      };\r\n    }\r\n    case \"UPDATE_FORM_INPUT_VALUE\": {\r\n      let newVal = action.payload.value;\r\n      let name = action.payload.name;\r\n\r\n      let dataCopy = { ...state.buyerInfo };\r\n\r\n      dataCopy[name] = newVal;\r\n\r\n      if(name === \"discount\"){\r\n        dataCopy[\"totalDiscount\"] = calculateDiscount(state.data, newVal)\r\n\r\n        console.log(dataCopy[\"totalDiscount\"]);\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        buyerInfo: { ...dataCopy },\r\n      };\r\n    }\r\n    case \"UPDATE_TABLE_INPUT_VALUE\": {\r\n      let index = action.payload.index;\r\n      let newVal = action.payload.val;\r\n      let column = action.payload.column;\r\n\r\n      let dataCopy = [...state.data];\r\n\r\n      let item = { ...dataCopy[index] };\r\n\r\n      item[column] = newVal;\r\n\r\n      dataCopy[index] = item;\r\n\r\n      let subtotal = calculateSubtotal(dataCopy);\r\n\r\n      let totalDiscount = calculateDiscount(dataCopy, state.buyerInfo.discount);\r\n\r\n      return {\r\n        ...state,\r\n        data: [...dataCopy],\r\n        buyerInfo: { \r\n          ...state.buyerInfo,\r\n          subtotal: subtotal,\r\n          totalDiscount: totalDiscount },\r\n      };\r\n    }\r\n    case \"CHANGE_PAGE\":\r\n      const newCurrentPage = action.payload;\r\n      return {\r\n        ...state,\r\n        pagination: { ...state.pagination, current: newCurrentPage },\r\n      };\r\n    case \"CHANGE_FORM\":\r\n      const newOption = action.payload;\r\n\r\n      // If changing form to faktur then printed table columns are adjusted\r\n      var columns =\r\n        newOption === \"faktur\"\r\n          ? [\r\n              \"No.\",\r\n              \"Kode Barang\",\r\n              \"Nama Barang\",\r\n              \"Disc.\",\r\n              \"Qty\",\r\n              \"Unit\",\r\n              \"Harga\",\r\n              \"Total\",\r\n            ]\r\n          : [\"No.\", \"Kode Barang\", \"Nama Barang\", \"Qty\", \"Unit\"];\r\n\r\n      return {\r\n        ...state,\r\n        columns: columns,\r\n      };\r\n    default:\r\n      throw new Error(\"No matching case found\");\r\n  }\r\n};\r\n\r\nconst receiptReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"UPDATE_FORM_INPUT_VALUE\":\r\n      const newVal = action.payload.value;\r\n      const name = action.payload.name;\r\n\r\n      let dataCopy = { ...state.data };\r\n\r\n      dataCopy[name] = newVal;\r\n\r\n      return { ...state, data: dataCopy };\r\n    default:\r\n      throw new Error(\"No matching case found\");\r\n  }\r\n};\r\n\r\nexport { invoiceReducer, receiptReducer };\r\n\r\n                                \r\n                                \r\n                                ","import { Button, Form, Input, DatePicker, Row, Col } from \"antd\";\r\nimport { useContext } from \"react\";\r\nimport { numberWithCommas } from \"./util.js\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport { ReceiptContext } from \"./App.js\";\r\nimport moment from \"moment\";\r\n\r\nconst Receipt = () => {\r\n  const { handleFinish } = useContext(ReceiptContext);\r\n\r\n  return (\r\n    <div id=\"kwitansi\">\r\n      <Form layout=\"vertical\" scrollToFirstError onFinish={handleFinish}>\r\n        <Row>\r\n          <Col offset=\"1\" span=\"13\">\r\n            <PayerName />\r\n          </Col>\r\n          <Col offset=\"1\" span=\"8\">\r\n            <ReceiptNumber />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col offset=\"1\" span=\"7\">\r\n            <ReceiptDate />\r\n          </Col>\r\n          <Col flex=\"auto\" pull=\"1\">\r\n            <GiroNumber />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col offset=\"1\" span=\"5\">\r\n            <Amount />\r\n          </Col>\r\n          <Col offset=\"1\" span=\"16\">\r\n            <AmountWritten />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col offset=\"1\" span=\"22\">\r\n            <Matter />\r\n          </Col>\r\n        </Row>\r\n        <Row justify=\"end\">\r\n          <Col pull=\"1\">\r\n            <SubmitButton />\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PayerName = () => {\r\n  const context = useContext(ReceiptContext);\r\n\r\n  return (\r\n    <Form.Item\r\n      name=\"name\"\r\n      label=\"Nama Pembayar\"\r\n      rules={[\r\n        {\r\n          required: true,\r\n          message: \"Nama pembayar tidak boleh kosong\",\r\n        },\r\n      ]}\r\n      initialValue={context.receiptState.data.name}\r\n    >\r\n      <Input\r\n        onBlur={(e) =>\r\n          context.receiptDispatch({\r\n            type: \"UPDATE_FORM_INPUT_VALUE\",\r\n            payload: {\r\n              name: \"name\",\r\n              value: e.target.value,\r\n            },\r\n          })\r\n        }\r\n      />\r\n    </Form.Item>\r\n  );\r\n};\r\n\r\nconst ReceiptNumber = () => {\r\n  const context = useContext(ReceiptContext);\r\n\r\n  return (\r\n    <Form.Item\r\n      name=\"receiptNumber\"\r\n      label=\"Nomor Kwitansi\"\r\n      rules={[\r\n        {\r\n          required: true,\r\n          message: \"Nomor kwitansi tidak boleh kosong\",\r\n        },\r\n      ]}\r\n      initialValue={context.receiptState.data.receiptNumber}\r\n    >\r\n      <Input\r\n        onBlur={(e) =>\r\n          context.receiptDispatch({\r\n            type: \"UPDATE_FORM_INPUT_VALUE\",\r\n            payload: {\r\n              name: \"receiptNumber\",\r\n              value: e.target.value,\r\n            },\r\n          })\r\n        }\r\n      />\r\n    </Form.Item>\r\n  );\r\n};\r\n\r\nconst ReceiptDate = () => {\r\n  const context = useContext(ReceiptContext);\r\n\r\n  return (\r\n    <Form.Item\r\n      name=\"date\"\r\n      label=\"Tanggal\"\r\n      rules={[\r\n        {\r\n          required: true,\r\n          message: \"Tanggal tidak boleh kosong\",\r\n        },\r\n      ]}\r\n      initialValue={moment(context.receiptState.data.date, \"DD-MM-YYYY\")}\r\n    >\r\n      <DatePicker\r\n        format=\"DD-MM-YYYY\"\r\n        onBlur={(e) =>\r\n          context.receiptDispatch({\r\n            type: \"UPDATE_FORM_INPUT_VALUE\",\r\n            payload: {\r\n              name: \"date\",\r\n              value: e.target.value,\r\n            },\r\n          })\r\n        }\r\n      />\r\n    </Form.Item>\r\n  );\r\n};\r\n\r\nconst GiroNumber = () => {\r\n  const context = useContext(ReceiptContext);\r\n\r\n  return (\r\n    <Form.Item\r\n      name=\"giroNumber\"\r\n      label=\"Nomor cek / giro\"\r\n      rules={[\r\n        {\r\n          required: true,\r\n          message: \"Nomor cek / giro tidak boleh kosong\",\r\n        },\r\n      ]}\r\n      initialValue={context.receiptState.data.giroNumber}\r\n    >\r\n      <Input\r\n        onBlur={(e) =>\r\n          context.receiptDispatch({\r\n            type: \"UPDATE_FORM_INPUT_VALUE\",\r\n            payload: {\r\n              name: \"giroNumber\",\r\n              value: e.target.value,\r\n            },\r\n          })\r\n        }\r\n      />\r\n    </Form.Item>\r\n  );\r\n};\r\n\r\nconst Amount = () => {\r\n  const context = useContext(ReceiptContext);\r\n\r\n  return (\r\n    <Form.Item\r\n      name=\"amount\"\r\n      label=\"Jumlah Uang\"\r\n      rules={[\r\n        {\r\n          required: true,\r\n          message: \"Jumlah uang tidak boleh kosong\",\r\n        },\r\n      ]}\r\n      initialValue={context.receiptState.data.amount}\r\n    >\r\n      <NumberFormat\r\n        format={numberWithCommas}\r\n        displayType=\"input\"\r\n        customInput={Input}\r\n        style={{ width: \"100%\"  }}\r\n        onValueChange={(values) => {\r\n          const { value } = values;\r\n          context.receiptDispatch({\r\n            type: \"UPDATE_FORM_INPUT_VALUE\",\r\n            payload: {\r\n              value: parseInt(value),\r\n              name: \"amount\",\r\n            },\r\n          });\r\n        }}\r\n      />\r\n    </Form.Item>\r\n  );\r\n};\r\n\r\nconst AmountWritten = () => {\r\n  const context = useContext(ReceiptContext);\r\n\r\n  return (\r\n    <Form.Item\r\n      name=\"amountWritten\"\r\n      label=\"Jumlah Uang (Terbilang)\"\r\n      rules={[\r\n        {\r\n          required: true,\r\n          message: \"Jumlah uang (terbilang) tidak boleh kosong\",\r\n        },\r\n      ]}\r\n      initialValue={context.receiptState.data.amountWritten}\r\n    >\r\n      <Input\r\n        onBlur={(e) =>\r\n          context.receiptDispatch({\r\n            type: \"UPDATE_FORM_INPUT_VALUE\",\r\n            payload: {\r\n              name: \"amountWritten\",\r\n              value: e.target.value,\r\n            },\r\n          })\r\n        }\r\n      />\r\n    </Form.Item>\r\n  );\r\n};\r\n\r\nconst Matter = () => {\r\n  const context = useContext(ReceiptContext);\r\n\r\n  return (\r\n    <Form.Item\r\n      name=\"matter\"\r\n      label=\"Untuk Kepentingan\"\r\n      rules={[\r\n        {\r\n          required: true,\r\n          message: \"Kepentingan tidak boleh kosong\",\r\n        },\r\n      ]}\r\n      initialValue={context.receiptState.data.matter}\r\n    >\r\n      <Input.TextArea\r\n        maxLength={150}\r\n        onBlur={(e) =>\r\n          context.receiptDispatch({\r\n            type: \"UPDATE_FORM_INPUT_VALUE\",\r\n            payload: {\r\n              name: \"matter\",\r\n              value: e.target.value,\r\n            },\r\n          })\r\n        }\r\n      />\r\n    </Form.Item>\r\n  );\r\n};\r\n\r\nconst SubmitButton = () => {\r\n  return (\r\n    <Form.Item style={{ marginBottom: 0 }}>\r\n      <Button type=\"primary\" size=\"large\" htmlType=\"submit\">\r\n        Generate\r\n      </Button>\r\n    </Form.Item>\r\n  );\r\n};\r\n\r\nexport { Receipt };\r\n","import \"./App.css\";\r\nimport { Row, Col, Card, Radio } from \"antd\";\r\nimport { useReactToPrint } from \"react-to-print\";\r\nimport React, { useState, useRef, useReducer } from \"react\";\r\nimport moment from \"moment\";\r\nimport InvoiceForm from \"./invoiceForm.js\";\r\nimport { InvoiceToPrint, invoiceStyle } from \"./invoice.js\";\r\nimport { ReceiptToPrint, receiptStyle} from \"./receipt.js\";\r\nimport { invoiceReducer, receiptReducer } from \"./reducer.js\";\r\nimport { Receipt } from \"./receiptForm.js\";\r\n\r\nconst ReceiptContext = React.createContext();\r\n\r\nconst App = () => {\r\n  const defaultInvoiceState = {\r\n    data: [\r\n      {\r\n        id: 1,\r\n        count: 1,\r\n        code: \"\",\r\n        name: \"\",\r\n        discount: false,\r\n        qty: 1,\r\n        unit: \"buah\",\r\n        price: 0,\r\n      },\r\n    ],\r\n    buyerInfo: {\r\n      name: \"\",\r\n      number: \"\",\r\n      address: \"\",\r\n      date: moment(new Date()).format(\"DD-MM-YYYY\"),\r\n      due: moment(new Date()).add(30, \"days\").format(\"DD-MM-YYYY\"),\r\n      city: \"\",\r\n      note: \"\",\r\n      discount: 0,\r\n      totalDiscount: 0,\r\n      subtotal: 0,\r\n    },\r\n    columns: [\r\n      \"No.\",\r\n      \"Kode Barang\",\r\n      \"Nama Barang\",\r\n      \"Disc.\",\r\n      \"Qty\",\r\n      \"Unit\",\r\n      \"Harga\",\r\n      \"Total\",\r\n    ],\r\n    pagination: {\r\n      current: 1,\r\n      pageSize: 5,\r\n    },\r\n  };\r\n\r\n  const defaultReceiptState = {\r\n    data: {\r\n      name: \"\",\r\n      receiptNumber: \"\",\r\n      date: moment(new Date()).format(\"DD-MM-YYYY\"),\r\n      giroNumber: \"\",\r\n      amount: \"\",\r\n      amountWritten: \"\",\r\n      matter: \"\",\r\n    },\r\n  };\r\n\r\n  const [formState, setFormState] = useState(\"faktur\");\r\n  const [invoiceState, invoiceDispatch] = useReducer(\r\n    invoiceReducer,\r\n    defaultInvoiceState\r\n  );\r\n  const [receiptState, receiptDispatch] = useReducer(\r\n    receiptReducer,\r\n    defaultReceiptState\r\n  );\r\n\r\n  const invoiceToPrint = useRef();\r\n  const receiptToPrint = useRef();\r\n\r\n  const changeForm = (e) => {\r\n    const newOption = e.target.value;\r\n\r\n    setFormState(newOption);\r\n\r\n    invoiceDispatch({ type: \"CHANGE_FORM\", payload: newOption });\r\n  };\r\n\r\n  const handleFinish = useReactToPrint(\r\n    formState !== \"kwitansi\"\r\n      ? {\r\n          content: () => invoiceToPrint.current,\r\n          pageStyle: invoiceStyle,\r\n        }\r\n      :\r\n      {\r\n          content: () => receiptToPrint.current,\r\n          pageStyle: receiptStyle,\r\n        }\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div style={{ overflow: \"hidden\", height: 0 }}>\r\n        {formState !== \"kwitansi\" \r\n        ? (\r\n          <InvoiceToPrint\r\n            ref={invoiceToPrint}\r\n            state={invoiceState}\r\n            formState={formState}\r\n          />\r\n        ) \r\n        : <ReceiptToPrint ref={receiptToPrint} state={receiptState}/>}\r\n      </div>\r\n      <Row style={{ marginTop: \"1vw\" }}>\r\n        <Col offset=\"2\">\r\n          <Radio.Group\r\n            defaultValue=\"faktur\"\r\n            buttonStyle=\"solid\"\r\n            onChange={changeForm}\r\n          >\r\n            <Radio.Button value=\"faktur\">Faktur Penjualan</Radio.Button>\r\n            <Radio.Button value=\"surat\">Surat Jalan</Radio.Button>\r\n            <Radio.Button value=\"kwitansi\">Kwitansi</Radio.Button>\r\n          </Radio.Group>\r\n        </Col>\r\n        <Col offset=\"3\">\r\n          <h2>\r\n            {formState === \"faktur\" && \"Info Faktur\"}\r\n            {formState === \"surat\" && \"Info Surat Jalan\"}\r\n            {formState === \"kwitansi\" && \"Info Kwitansi\"}\r\n          </h2>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col offset=\"2\" span=\"20\">\r\n          <Card>\r\n            {formState !== \"kwitansi\" ? (\r\n              <InvoiceForm\r\n                submitHandler={handleFinish}\r\n                state={invoiceState}\r\n                dispatch={invoiceDispatch}\r\n                formState={formState}\r\n              />\r\n            ) : (\r\n              <ReceiptContext.Provider value={{ \r\n                receiptState, \r\n                receiptDispatch, \r\n                handleFinish }}\r\n              >\r\n                <Receipt />\r\n              </ReceiptContext.Provider>\r\n            )}\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport {App, ReceiptContext};\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport { App } from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}