{"version":3,"sources":["constants/constant.js","helpers/helper.js","pages/invoiceForm.js","assets/logo_with_text.png","pages/invoicePrint.js","assets/logo_with_text_rotated.png","pages/receiptPrint.js","reducers/invoice.js","reducers/receipt.js","pages/receiptForm.js","pages/App.js","css/receiptPrint.js","css/invoicePrint.js","reportWebVitals.js","index.js"],"names":["defaultColumns","invoiceColumns","deliveryOrderColumns","defaultTableData","id","count","code","name","discount","qty","unit","price","defaultInvoiceFormInfo","number","localStorage","getItem","address","date","moment","Date","format","due","add","city","note","totalDiscount","subtotal","defaultReceiptFormInfo","receiptNumber","giroNumber","amount","amountWritten","matter","defaultInvoiceState","tableData","formInfo","pagination","current","pageSize","defaultReceiptState","numberWithCommas","x","parts","toString","split","replace","getFieldsOnTable","fields","keys","Object","regex","RegExp","filter","key","test","calculateSubtotal","data","parseInt","reduce","sum","item","calculateDiscount","discountedItems","length","Option","Select","EditableCell","editable","children","record","dataIndex","rowIndex","title","state","dispatch","restProps","formState","childNode","page","index","Item","rules","required","message","initialValue","preserve","style","marginBottom","allowNegative","value","displayType","customInput","Input","width","textAlign","onValueChange","values","type","payload","val","column","suffix","parseFloat","onChange","maxLength","onBlur","e","target","ItemsTable","props","components","body","cell","columns","align","render","text","_","idx","isNaN","danger","onClick","removeItem","tableColumns","map","col","onCell","isButtonHidden","Math","ceil","span","offset","dataSource","toBeReset","form","getFieldsValue","validateFields","then","catch","err","console","log","changePage","rowKey","footer","fontWeight","onConfirm","setFieldsValue","code0","name0","discount0","qty0","unit0","price0","okText","cancelText","size","htmlType","hidden","newRow","assign","InvoiceForm","Form","useForm","layout","onFinish","setItem","submitHandler","scrollToFirstError","label","flex","pull","TextArea","InvoiceToPrint","sizePerPage","this","dataLength","pageCount","invoicePages","i","startIndex","endIndex","lastPageItems","push","className","start","end","React","PureComponent","Header","src","logo","alt","BuyerCompany","Dates","TableItems","subset","slice","toLowerCase","outerIndex","innerIndex","colSpan","Footer","person","SignArea","Layout","Sider","Content","ReceiptToPrint","backgroundColor","fontSize","border","borderStyle","display","alignItems","justifyContent","logo_rotated","borderRight","borderTop","borderBottom","height","direction","marginTop","invoiceReducer","action","newItem","dataCopy","newItems","newVal","newCurrentPage","Error","receiptReducer","Receipt","context","useContext","ReceiptContext","receiptState","handleFinish","justify","PayerName","receiptDispatch","ReceiptNumber","ReceiptDate","GiroNumber","Amount","AmountWritten","Matter","SubmitButton","createContext","App","useState","setFormState","useReducer","invoiceState","invoiceDispatch","invoiceToPrint","useRef","receiptToPrint","printForm","useReactToPrint","content","pageStyle","JSON","stringify","overflow","ref","Group","defaultValue","buttonStyle","newOption","Button","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.bd4db5c9.chunk.js","sourcesContent":["import moment from \"moment\";\r\nconst defaultColumns = {\r\n  invoiceColumns: [\r\n    \"No.\",\r\n    \"Kode Barang\",\r\n    \"Nama Barang\",\r\n    \"Disc.\",\r\n    \"Qty\",\r\n    \"Unit\",\r\n    \"Harga\",\r\n    \"Total\",\r\n  ],\r\n  deliveryOrderColumns: [\"No.\", \"Kode Barang\", \"Nama Barang\", \"Qty\", \"Unit\"],\r\n};\r\n\r\nconst defaultTableData = {\r\n  id: 1,\r\n  count: 1,\r\n  code: \"\",\r\n  name: \"\",\r\n  //discount: false,\r\n  discount: 0,\r\n  qty: 1,\r\n  unit: \"buah\",\r\n  price: 0,\r\n};\r\n\r\nconst defaultInvoiceFormInfo = {\r\n  name: \"\",\r\n  number: localStorage.getItem(\"invoice\")\r\n    ? localStorage.getItem(\"invoice\")\r\n    : \"\",\r\n  address: \"\",\r\n  date: moment(new Date()).format(\"DD-MM-YYYY\"),\r\n  due: moment(new Date()).add(30, \"days\").format(\"DD-MM-YYYY\"),\r\n  city: \"\",\r\n  note: \"\",\r\n  discount: 0,\r\n  totalDiscount: 0,\r\n  subtotal: 0,\r\n};\r\n\r\nconst defaultReceiptFormInfo = {\r\n  name: \"\",\r\n  receiptNumber: localStorage.getItem(\"receipt\")\r\n    ? localStorage.getItem(\"receipt\")\r\n    : \"\",\r\n  date: moment(new Date()).format(\"DD-MM-YYYY\"),\r\n  giroNumber: \"\",\r\n  amount: \"\",\r\n  amountWritten: \"\",\r\n  matter: \"\",\r\n};\r\n\r\nconst defaultInvoiceState = {\r\n  tableData: [defaultTableData],\r\n  formInfo: defaultInvoiceFormInfo,\r\n  pagination: {\r\n    current: 1,\r\n    pageSize: 5,\r\n  },\r\n};\r\n\r\nconst defaultReceiptState = {\r\n  formInfo: defaultReceiptFormInfo,\r\n};\r\n\r\nexport {\r\n  defaultInvoiceState,\r\n  defaultReceiptState,\r\n  defaultColumns,\r\n  defaultTableData,\r\n};\r\n","const numberWithCommas = (x) => {\r\n  var parts = x.toString().split(\".\");\r\n  parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n  return parts[0];\r\n  //return parts.join(\",\");\r\n};;\r\n\r\nconst getFieldsOnTable = (fields) => {\r\n  let keys = Object.keys(fields);\r\n  let regex = new RegExp(\"^code|^qty|^name|^price\");\r\n  return keys.filter((key) => regex.test(key));\r\n};\r\n\r\nconst calculateSubtotal = (data) => {\r\n  return parseInt(data.reduce((sum, item) => sum + item.qty * item.price, 0));\r\n};\r\n\r\n// const calculateDiscount = (data, discount) => {\r\n//   let discountedItems = data.filter((item) => item.discount === true);\r\n\r\n//   if (discountedItems.length > 0) {\r\n//     return parseInt(\r\n//       discountedItems.reduce(\r\n//         (sum, item) => sum + (item.qty * item.price * discount) / 100,\r\n//         0\r\n//       )\r\n//     );\r\n//   }\r\n\r\n//   return 0;\r\n// };\r\n\r\nconst calculateDiscount = (data) => {\r\n  let discountedItems = data.filter((item) => item.discount > 0);\r\n\r\n  if (discountedItems.length > 0) {\r\n    return parseInt(\r\n      discountedItems.reduce(\r\n        (sum, item) => sum + (item.qty * item.price * item.discount) / 100,\r\n        0\r\n      )\r\n    );\r\n  }\r\n\r\n  return 0;\r\n};\r\n\r\nexport {\r\n  numberWithCommas,\r\n  getFieldsOnTable,\r\n  calculateSubtotal,\r\n  calculateDiscount,\r\n};\r\n","import {\r\n  Button,\r\n  Form,\r\n  Input,\r\n  DatePicker,\r\n  Row,\r\n  Col,\r\n  Popconfirm,\r\n  // Checkbox,\r\n  Table,\r\n  Select,\r\n} from \"antd\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport moment from \"moment\";\r\nimport { defaultTableData } from \"../constants/constant.js\";\r\nimport { numberWithCommas, getFieldsOnTable } from \"../helpers/helper.js\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst InvoiceForm = (props) => {\r\n  const [form] = Form.useForm();\r\n\r\n  const handleFinish = () => {\r\n    // save invoice number to local storage\r\n    localStorage.setItem(props.formState, props.state.formInfo.number);\r\n\r\n    props.submitHandler();\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      layout=\"vertical\"\r\n      onFinish={handleFinish}\r\n      scrollToFirstError\r\n    >\r\n      <Row>\r\n        <Col span=\"13\" offset=\"1\">\r\n          <Form.Item\r\n            name=\"companyName\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Nama perusahaan tidak boleh kosong\",\r\n              },\r\n            ]}\r\n            label=\"Nama Perusahaan\"\r\n            initialValue={props.state.formInfo.name}\r\n          >\r\n            <Input\r\n              onBlur={(e) =>\r\n                props.dispatch({\r\n                  type: \"UPDATE_FORM_INPUT_VALUE\",\r\n                  payload: {\r\n                    name: \"name\",\r\n                    value: e.target.value,\r\n                  },\r\n                })\r\n              }\r\n            />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col span=\"8\" offset=\"1\">\r\n          <Form.Item\r\n            name=\"city\"\r\n            label=\"Kota\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Kota tidak boleh kosong\",\r\n              },\r\n            ]}\r\n            initialValue={props.state.formInfo.city}\r\n          >\r\n            <Input\r\n              onBlur={(e) =>\r\n                props.dispatch({\r\n                  type: \"UPDATE_FORM_INPUT_VALUE\",\r\n                  payload: {\r\n                    name: \"city\",\r\n                    value: e.target.value,\r\n                  },\r\n                })\r\n              }\r\n            />\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col span=\"22\" offset=\"1\">\r\n          <Form.Item\r\n            name=\"address\"\r\n            label=\"Alamat Perusahaan\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Alamat perusahaan tidak boleh kosong\",\r\n              },\r\n            ]}\r\n            initialValue={props.state.formInfo.address}\r\n          >\r\n            <Input\r\n              maxLength={80}\r\n              onBlur={(e) =>\r\n                props.dispatch({\r\n                  type: \"UPDATE_FORM_INPUT_VALUE\",\r\n                  payload: {\r\n                    name: \"address\",\r\n                    value: e.target.value,\r\n                  },\r\n                })\r\n              }\r\n            />\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col span=\"6\" offset=\"1\">\r\n          <Form.Item\r\n            name=\"date\"\r\n            label=\"Tanggal\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Tanggal tidak boleh kosong\",\r\n              },\r\n            ]}\r\n            initialValue={moment(props.state.formInfo.date, \"DD-MM-YYYY\")}\r\n          >\r\n            <DatePicker\r\n              format=\"DD-MM-YYYY\"\r\n              onBlur={(e) =>\r\n                props.dispatch({\r\n                  type: \"UPDATE_FORM_INPUT_VALUE\",\r\n                  payload: {\r\n                    name: \"date\",\r\n                    value: e.target.value,\r\n                  },\r\n                })\r\n              }\r\n            />\r\n          </Form.Item>\r\n        </Col>\r\n        {props.formState === \"invoice\" && (\r\n          <Col span=\"7\">\r\n            <Form.Item\r\n              name=\"due\"\r\n              label=\"Jatuh Tempo\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Jatuh tempo tidak boleh kosong\",\r\n                },\r\n              ]}\r\n              initialValue={moment(props.state.formInfo.due, \"DD-MM-YYYY\")}\r\n            >\r\n              <DatePicker\r\n                format=\"DD-MM-YYYY\"\r\n                onBlur={(e) =>\r\n                  props.dispatch({\r\n                    type: \"UPDATE_FORM_INPUT_VALUE\",\r\n                    payload: {\r\n                      name: \"due\",\r\n                      value: e.target.value,\r\n                    },\r\n                  })\r\n                }\r\n              />\r\n            </Form.Item>\r\n          </Col>\r\n        )}\r\n        <Col flex=\"auto\" pull=\"1\">\r\n          <Form.Item\r\n            name=\"number\"\r\n            label={\r\n              props.formState === \"invoice\"\r\n                ? \"Nomor Faktur Jual\"\r\n                : \"Nomor Surat Jalan\"\r\n            }\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Nomor faktur jual tidak boleh kosong\",\r\n              },\r\n            ]}\r\n            initialValue={props.state.formInfo.number}\r\n          >\r\n            <Input\r\n              onBlur={(e) =>\r\n                props.dispatch({\r\n                  type: \"UPDATE_FORM_INPUT_VALUE\",\r\n                  payload: {\r\n                    name: \"number\",\r\n                    value: e.target.value,\r\n                  },\r\n                })\r\n              }\r\n            />\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col span=\"22\" offset=\"1\">\r\n          <Form.Item\r\n            label=\"Keterangan\"\r\n            name=\"note\"\r\n            initialValue={props.state.formInfo.note}\r\n          >\r\n            <Input.TextArea\r\n              maxLength={120}\r\n              onBlur={(e) =>\r\n                props.dispatch({\r\n                  type: \"UPDATE_FORM_INPUT_VALUE\",\r\n                  payload: {\r\n                    name: \"note\",\r\n                    value: e.target.value,\r\n                  },\r\n                })\r\n              }\r\n            />\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n      <ItemsTable\r\n        dispatch={props.dispatch}\r\n        state={props.state}\r\n        form={form}\r\n        formState={props.formState}\r\n        isButtonHidden={props.isButtonHidden}\r\n        columns={props.columns}\r\n      />\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst EditableCell = ({\r\n  editable,\r\n  record,\r\n  children,\r\n  dataIndex,\r\n  rowIndex,\r\n  title,\r\n  state,\r\n  dispatch,\r\n  formState,\r\n  ...restProps\r\n}) => {\r\n  let childNode = children;\r\n\r\n  if (editable) {\r\n    let page = { ...state.pagination };\r\n    let index = rowIndex + (page.current - 1) * page.pageSize;\r\n\r\n    if (dataIndex === \"qty\" || dataIndex === \"price\") {\r\n      childNode = (\r\n        <Form.Item\r\n          name={`${dataIndex}${index}`}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `${title} tidak boleh kosong`,\r\n            },\r\n          ]}\r\n          initialValue={state.tableData[index][dataIndex]}\r\n          preserve={false}\r\n          style={{ marginBottom: 0 }}\r\n        >\r\n          <NumberFormat\r\n            {...(dataIndex === \"price\"\r\n              ? {\r\n                  format: numberWithCommas,\r\n                  allowNegative: true,\r\n                }\r\n              : {\r\n                  allowNegative: false,\r\n                })}\r\n            value={state.tableData[index][dataIndex]}\r\n            displayType=\"input\"\r\n            customInput={Input}\r\n            style={{ width: \"100%\", textAlign: \"end\" }}\r\n            onValueChange={(values) => {\r\n              const { value } = values;\r\n              dispatch({\r\n                type: \"UPDATE_TABLE_INPUT_VALUE\",\r\n                payload: {\r\n                  val: parseInt(value),\r\n                  index: index,\r\n                  column: dataIndex,\r\n                },\r\n              });\r\n            }}\r\n          />\r\n        </Form.Item>\r\n      );\r\n    } else if (dataIndex === \"discount\") {\r\n      childNode = (\r\n        // <Form.Item\r\n        //   name={`${dataIndex}${index}`}\r\n        //   valuePropName=\"checked\"\r\n        //   initialValue={state.tableData[index][dataIndex]}\r\n        //   preserve={false}\r\n        //   style={{ marginBottom: 0 }}\r\n        // >\r\n        //   <Checkbox\r\n        //     disabled={state.formInfo.discount === 0 || isNaN(state.formInfo.discount)}\r\n        //     defaultChecked={state.tableData[index][dataIndex]}\r\n        //     style={{transform: \"scale(1.5)\" }}\r\n        //     onChange={(e) =>\r\n        //       dispatch({\r\n        //         type: \"UPDATE_TABLE_INPUT_VALUE\",\r\n        //         payload: {\r\n        //           val: e.target.checked,\r\n        //           index: index,\r\n        //           column: dataIndex,\r\n        //         },\r\n        //       })\r\n        //     }\r\n        //   />\r\n        // </Form.Item>\r\n\r\n        <Form.Item\r\n          name={`${dataIndex}${index}`}\r\n          initialValue={state.tableData[index][dataIndex]}\r\n          preserve={false}\r\n          style={{ marginBottom: 0 }}\r\n        >\r\n          <NumberFormat\r\n            value={state.tableData[index][dataIndex]}\r\n            displayType=\"input\"\r\n            customInput={Input}\r\n            suffix=\"%\"\r\n            allowNegative={false}\r\n            style={{ width: \"100%\", textAlign: \"end\" }}\r\n            onValueChange={(values) => {\r\n              const { value } = values;\r\n              dispatch({\r\n                type: \"UPDATE_TABLE_INPUT_VALUE\",\r\n                payload: {\r\n                  val: parseFloat(value),\r\n                  index: index,\r\n                  column: dataIndex,\r\n                },\r\n              });\r\n            }}\r\n          />\r\n        </Form.Item>\r\n      );\r\n    } else if (dataIndex === \"unit\") {\r\n      childNode = (\r\n        <Form.Item\r\n          name={`${dataIndex}${index}`}\r\n          initialValue={state.tableData[index][dataIndex]}\r\n          preserve={false}\r\n          style={{ marginBottom: 0 }}\r\n        >\r\n          <Select\r\n            onChange={(value) =>\r\n              dispatch({\r\n                type: \"UPDATE_TABLE_INPUT_VALUE\",\r\n                payload: {\r\n                  val: value,\r\n                  index: index,\r\n                  column: dataIndex,\r\n                },\r\n              })\r\n            }\r\n          >\r\n            <Option value=\"buah\">buah</Option>\r\n            <Option value=\"set\">set</Option>\r\n          </Select>\r\n        </Form.Item>\r\n      );\r\n    } else {\r\n      childNode = (\r\n        <Form.Item\r\n          name={`${dataIndex}${index}`}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `${title} tidak boleh kosong`,\r\n            },\r\n          ]}\r\n          initialValue={state.tableData[index][dataIndex]}\r\n          preserve={false}\r\n          style={{ marginBottom: 0 }}\r\n        >\r\n          <Input\r\n            maxLength={60}\r\n            onBlur={(e) =>\r\n              dispatch({\r\n                type: \"UPDATE_TABLE_INPUT_VALUE\",\r\n                payload: {\r\n                  val: e.target.value,\r\n                  index: index,\r\n                  column: dataIndex,\r\n                },\r\n              })\r\n            }\r\n          />\r\n        </Form.Item>\r\n      );\r\n    }\r\n  }\r\n\r\n  return <td {...restProps}>{childNode}</td>;\r\n};\r\n\r\nconst ItemsTable = (props) => {\r\n  const components = {\r\n    body: {\r\n      cell: EditableCell,\r\n    },\r\n  };\r\n\r\n  var columns = [];\r\n\r\n  if (props.formState === \"invoice\") {\r\n    columns = [\r\n      {\r\n        title: props.columns[0],\r\n        dataIndex: \"id\",\r\n        width: \"5%\",\r\n      },\r\n      {\r\n        title: props.columns[1],\r\n        dataIndex: \"code\",\r\n        editable: true,\r\n        width: \"15%\",\r\n      },\r\n      {\r\n        title: props.columns[2],\r\n        dataIndex: \"name\",\r\n        editable: true,\r\n        width: \"20%\",\r\n      },\r\n      {\r\n        title: props.columns[3],\r\n        dataIndex: \"discount\",\r\n        editable: true,\r\n        width: \"10%\",\r\n        align: \"right\",\r\n      },\r\n      {\r\n        title: props.columns[4],\r\n        dataIndex: \"qty\",\r\n        editable: true,\r\n        width: \"8%\",\r\n        align: \"right\",\r\n      },\r\n      {\r\n        title: props.columns[5],\r\n        dataIndex: \"unit\",\r\n        editable: true,\r\n        width: \"10%\",\r\n      },\r\n      {\r\n        title: props.columns[6],\r\n        dataIndex: \"price\",\r\n        editable: true,\r\n        width: \"13%\",\r\n        align: \"right\",\r\n      },\r\n      {\r\n        title: props.columns[7],\r\n        dataIndex: \"total\",\r\n        align: \"right\",\r\n        width: \"14%\",\r\n        render: (text, _, index) => {\r\n          let idx =\r\n            index +\r\n            (props.state.pagination.current - 1) *\r\n              props.state.pagination.pageSize;\r\n          return (\r\n            <NumberFormat\r\n              format={numberWithCommas}\r\n              displayType=\"text\"\r\n              value={\r\n                isNaN(props.state.tableData[idx].qty) ||\r\n                isNaN(props.state.tableData[idx].price)\r\n                  ? 0\r\n                  : props.state.tableData[idx].qty *\r\n                    props.state.tableData[idx].price\r\n              }\r\n            />\r\n          );\r\n        },\r\n      },\r\n      {\r\n        title: \"Hapus\",\r\n        dataIndex: \"remove\",\r\n        render: (_, record) =>\r\n          props.state.tableData.length > 1 ? (\r\n            <Button type=\"default\" danger onClick={() => removeItem(record.id)}>\r\n              Hapus\r\n            </Button>\r\n          ) : null,\r\n      },\r\n    ];\r\n  } else if (props.formState === \"deliveryOrder\") {\r\n    columns = [\r\n      {\r\n        title: props.columns[0],\r\n        dataIndex: \"id\",\r\n        width: \"5%\",\r\n      },\r\n      {\r\n        title: props.columns[1],\r\n        dataIndex: \"code\",\r\n        editable: true,\r\n        width: \"15%\",\r\n      },\r\n      {\r\n        title: props.columns[2],\r\n        dataIndex: \"name\",\r\n        editable: true,\r\n        width: \"50%\",\r\n      },\r\n      {\r\n        title: props.columns[3],\r\n        dataIndex: \"qty\",\r\n        editable: true,\r\n        width: \"10%\",\r\n        align: \"right\",\r\n      },\r\n      {\r\n        title: props.columns[4],\r\n        dataIndex: \"unit\",\r\n        editable: true,\r\n        width: \"10%\",\r\n      },\r\n      {\r\n        title: \"Hapus\",\r\n        dataIndex: \"remove\",\r\n        render: (_, record) =>\r\n          props.state.tableData.length > 1 ? (\r\n            <Button type=\"default\" danger onClick={() => removeItem(record.id)}>\r\n              Hapus\r\n            </Button>\r\n          ) : null,\r\n      },\r\n    ];\r\n  }\r\n\r\n  const tableColumns = columns.map((col) => {\r\n    if (!col.editable) {\r\n      return col;\r\n    }\r\n\r\n    return {\r\n      ...col,\r\n      onCell: (record, rowIndex) => ({\r\n        record,\r\n        rowIndex,\r\n        editable: col.editable,\r\n        dataIndex: col.dataIndex,\r\n        title: col.title,\r\n        state: props.state,\r\n        dispatch: props.dispatch,\r\n        formState: props.formState,\r\n      }),\r\n    };\r\n  });\r\n\r\n  const addItem = () => {\r\n    const toBeReset = getFieldsOnTable(props.form.getFieldsValue());\r\n\r\n    // copy defaulttabledata by values not reference\r\n    let newRow = Object.assign({}, defaultTableData);\r\n\r\n    newRow.id = props.state.tableData.length + 1;\r\n    newRow.count =\r\n      props.state.tableData[props.state.tableData.length - 1].count + 1;\r\n\r\n    // validate before adding new item creates a new page\r\n    if (props.state.tableData.length % props.state.pagination.pageSize === 0) {\r\n      props.form\r\n        .validateFields(toBeReset)\r\n        .then((values) => {\r\n          props.dispatch({ type: \"ADD_ITEM\", payload: newRow });\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"form values are missing\");\r\n        });\r\n    } else {\r\n      props.dispatch({ type: \"ADD_ITEM\", payload: newRow });\r\n    }\r\n  };\r\n\r\n  const removeItem = (id) => {\r\n    props.dispatch({ type: \"REMOVE_ITEM\", payload: id });\r\n  };\r\n\r\n  const removeAll = () => {\r\n    props.dispatch({ type: \"REMOVE_ALL\", payload: props.form });\r\n\r\n    // reset first row form values\r\n    props.form.setFieldsValue({\r\n      code0: \"\",\r\n      name0: \"\",\r\n      // discount0: false,\r\n      discount0: 0,\r\n      qty0: 1,\r\n      unit0: \"buah\",\r\n      price0: 0,\r\n    });\r\n  };\r\n\r\n  const changePage = (page) => {\r\n    const toBeReset = getFieldsOnTable(props.form.getFieldsValue());\r\n\r\n    props.form\r\n      .validateFields(toBeReset)\r\n      .then((values) => {\r\n        props.dispatch({ type: \"CHANGE_PAGE\", payload: page.current });\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"form values are missing\");\r\n      });\r\n  };\r\n\r\n  const isButtonHidden = () => {\r\n    return (\r\n      Math.ceil(\r\n        props.state.tableData.length / props.state.pagination.pageSize\r\n      ) !== props.state.pagination.current && props.formState !== \"receipt\"\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col span=\"22\" offset=\"1\">\r\n          <Table\r\n            components={components}\r\n            dataSource={props.state.tableData}\r\n            columns={tableColumns}\r\n            pagination={props.state.pagination}\r\n            onChange={(pagination) => changePage(pagination)}\r\n            rowKey=\"count\"\r\n            {...(props.formState === \"invoice\" && {\r\n              footer: () => {\r\n                return (\r\n                  <div style={{ fontWeight: \"bold\" }}>\r\n                    <Row>\r\n                      <Col offset=\"15\" span=\"3\">\r\n                        Subtotal\r\n                      </Col>\r\n                      <Col span=\"3\" offset=\"3\" style={{ textAlign: \"end\" }}>\r\n                        <NumberFormat\r\n                          displayType=\"text\"\r\n                          format={numberWithCommas}\r\n                          value={\r\n                            isNaN(props.state.formInfo.subtotal)\r\n                              ? 0\r\n                              : props.state.formInfo.subtotal\r\n                          }\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                    <Row align=\"middle\">\r\n                      <Col offset=\"15\" span=\"5\">\r\n                        Discount\r\n                      </Col>\r\n                      {/* <Col span=\"2\">\r\n                        <Form.Item\r\n                          name=\"discount\"\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: \"Discount tidak boleh kosong\",\r\n                            },\r\n                          ]}\r\n                          initialValue={props.state.formInfo.discount}\r\n                          style={{ marginBottom: 0, fontWeight: \"normal\" }}\r\n                        >\r\n                          <NumberFormat\r\n                            suffix=\"%\"\r\n                            customInput={Input}\r\n                            displayType=\"input\"\r\n                            allowNegative={false}\r\n                            value={props.state.formInfo.discount}\r\n                            style={{ textAlign: \"end\" }}\r\n                            onValueChange={(values) => {\r\n                              const { value } = values;\r\n                              props.dispatch({\r\n                                type: \"UPDATE_FORM_INPUT_VALUE\",\r\n                                payload: {\r\n                                  name: \"discount\",\r\n                                  value: parseFloat(value),\r\n                                },\r\n                              });\r\n                            }}\r\n                          />\r\n                        </Form.Item>\r\n                      </Col> */}\r\n                      <Col span=\"3\" offset=\"1\" style={{ textAlign: \"end\" }}>\r\n                        <NumberFormat\r\n                          displayType=\"text\"\r\n                          format={numberWithCommas}\r\n                          value={\r\n                            isNaN(props.state.formInfo.totalDiscount)\r\n                              ? 0\r\n                              : props.state.formInfo.totalDiscount\r\n                          }\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col offset=\"15\" span=\"3\">\r\n                        Grand Total\r\n                      </Col>\r\n                      <Col span=\"3\" offset=\"3\" style={{ textAlign: \"end\" }}>\r\n                        <NumberFormat\r\n                          displayType=\"text\"\r\n                          format={numberWithCommas}\r\n                          value={\r\n                            isNaN(props.state.formInfo.totalDiscount) ||\r\n                            isNaN(props.state.formInfo.subtotal)\r\n                              ? 0\r\n                              : props.state.formInfo.subtotal -\r\n                                props.state.formInfo.totalDiscount\r\n                          }\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                );\r\n              },\r\n            })}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col offset=\"1\" span=\"5\">\r\n          <Popconfirm\r\n            title=\"Yakin ingin hapus semua barang?\"\r\n            onConfirm={removeAll}\r\n            okText=\"Yes\"\r\n            cancelText=\"No\"\r\n          >\r\n            <Button type=\"default\" size=\"large\" htmlType=\"button\" danger>\r\n              Hapus Semua Barang\r\n            </Button>\r\n          </Popconfirm>\r\n        </Col>\r\n        <Col span=\"5\">\r\n          <Col>\r\n            <Button\r\n              type=\"default\"\r\n              size=\"large\"\r\n              htmlType=\"button\"\r\n              hidden={isButtonHidden()}\r\n              onClick={addItem}\r\n            >\r\n              Tambah Barang Baru\r\n            </Button>\r\n          </Col>\r\n        </Col>\r\n        <Col offset=\"10\" span=\"3\">\r\n          <Form.Item style={{ marginBottom: 0 }}>\r\n            <Button\r\n              type=\"primary\"\r\n              size=\"large\"\r\n              htmlType=\"submit\"\r\n              hidden={isButtonHidden()}\r\n            >\r\n              Generate\r\n            </Button>\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InvoiceForm;\r\n","export default __webpack_public_path__ + \"static/media/logo_with_text.def95dbe.png\";","import React from \"react\";\r\nimport { numberWithCommas } from \"../helpers/helper.js\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport logo from \"../assets/logo_with_text.png\";\r\n\r\nclass InvoiceToPrint extends React.PureComponent {\r\n  render() {\r\n    let sizePerPage = 8; // 8 items per print page\r\n\r\n    if (this.props.formState === \"deliveryOrder\") {\r\n      // delivery order tidak ada subtotal / grand total / discount, jadi baris barang bisa muat lbh banyak\r\n      sizePerPage = 10;\r\n    }\r\n\r\n    let dataLength = this.props.state.tableData.length; // items count\r\n    let pageCount = Math.ceil(dataLength / sizePerPage); // page count\r\n\r\n    let invoicePages = [];\r\n\r\n    for (var i = 0; i < pageCount; i++) {\r\n      let startIndex = i * sizePerPage; // start index for item slicing, if sizeperpage = 10 then startindex 0, 10, 20, ...\r\n      let endIndex = startIndex + sizePerPage; // end index for item slicing\r\n      let lastPageItems = dataLength % sizePerPage; // item count for last page, maybe lower than sizeperpage\r\n      if (i === pageCount - 1 && lastPageItems !== 0) {\r\n        // if last page and last page item count != sizeperpage\r\n        endIndex = startIndex + lastPageItems;\r\n      }\r\n      invoicePages.push(\r\n        <div className=\"invoice page-break\" key={`page${i + 1}`}>\r\n          <Header\r\n            {...this.props.state.formInfo}\r\n            formState={this.props.formState}\r\n            page={i + 1}\r\n            pageCount={pageCount}\r\n          />\r\n          <BuyerCompany {...this.props.state.formInfo} />\r\n          <Dates\r\n            {...this.props.state.formInfo}\r\n            formState={this.props.formState}\r\n          />\r\n          <TableItems {...this.props} start={startIndex} end={endIndex} />\r\n          <Footer {...this.props.state} formState={this.props.formState} />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return <div>{invoicePages}</div>;\r\n  }\r\n}\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <div>\r\n      <div className=\"column\">\r\n        <img src={logo} alt=\"logo\" />\r\n      </div>\r\n      <h1 id=\"title\" className=\"column\">\r\n        {props.formState === \"invoice\" && \"FAKTUR PENJUALAN\"}\r\n        {props.formState === \"deliveryOrder\" && \"SURAT JALAN\"}\r\n      </h1>\r\n      <h3 id=\"pageNo\" className=\"column\">\r\n        Page {props.page} of {props.pageCount}\r\n      </h3>\r\n    </div>\r\n  );\r\n};\r\n\r\n// const SellerCompany = () => {\r\n//   return (\r\n//     <div id=\"sellerCompany\" className=\"column\">\r\n//       <h3>UD. Maju Jaya Diesel</h3>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\nconst BuyerCompany = (props) => {\r\n  return (\r\n    <div id=\"buyerCompany\" className=\"column\">\r\n      <h3>Kepada Yth.</h3>\r\n      <h3>{props.name}</h3>\r\n      <h3>{props.address}</h3>\r\n      <h3>{props.city}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Dates = (props) => {\r\n  return (\r\n    <div className=\"column\">\r\n      <div className=\"info\">\r\n        <h3>\r\n          <span>\r\n            No. {props.formState === \"invoice\" ? \"faktur\" : \"surat jalan\"}\r\n          </span>\r\n          : {props.number}\r\n        </h3>\r\n        <h3>\r\n          <span>Tanggal dokumen</span>: {props.date}\r\n        </h3>\r\n        {props.formState === \"invoice\" && (\r\n          <h3>\r\n            <span>Jatuh tempo (30 hari)</span>: {props.due}\r\n          </h3>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst TableItems = (props) => {\r\n  let startIndex = props.start;\r\n  let endIndex = props.end;\r\n  let subset = props.state.tableData.slice(startIndex, endIndex);\r\n\r\n  return (\r\n    <table id=\"innerTable\">\r\n      {/* Columns width based on invoice / delivery order (w/o price & total) */}\r\n      {props.formState === \"invoice\" ? (\r\n        <colgroup>\r\n          <col span=\"1\" style={{ width: \"5%\" }} />\r\n          <col span=\"1\" style={{ width: \"20%\" }} />\r\n          <col span=\"1\" style={{ width: \"35%\" }} />\r\n          <col span=\"1\" style={{ width: \"5%\" }} />\r\n          <col span=\"1\" style={{ width: \"5%\" }} />\r\n          <col span=\"1\" style={{ width: \"10%\" }} />\r\n          <col span=\"1\" style={{ width: \"10%\" }} />\r\n          <col span=\"1\" style={{ width: \"15%\" }} />\r\n        </colgroup>\r\n      ) : (\r\n        <colgroup>\r\n          <col span=\"1\" style={{ width: \"5%\" }} />\r\n          <col span=\"1\" style={{ width: \"20%\" }} />\r\n          <col span=\"1\" style={{ width: \"60%\" }} />\r\n          <col span=\"1\" style={{ width: \"5%\" }} />\r\n          <col span=\"1\" style={{ width: \"10%\" }} />\r\n        </colgroup>\r\n      )}\r\n      <thead>\r\n        <tr>\r\n          {props.columns.map((column, index) => (\r\n            <th\r\n              key={index}\r\n              {...((column.toLowerCase() === \"harga\" ||\r\n                column.toLowerCase() === \"total\" ||\r\n                column.toLowerCase() === \"qty\") && {\r\n                className: \"numeric\",\r\n              })}\r\n            >\r\n              {column}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {subset.map((item, outerIndex) => {\r\n          return (\r\n            <tr key={outerIndex} className=\"items\">\r\n              {Object.keys(item).map((column, innerIndex) => {\r\n                if (\r\n                  column !== \"count\" &&\r\n                  ((column !== \"price\" &&\r\n                    column !== \"discount\" &&\r\n                    props.formState === \"deliveryOrder\") ||\r\n                    props.formState === \"invoice\")\r\n                )\r\n                  // Column based on keys of data object\r\n                  return (\r\n                    <td\r\n                      key={innerIndex}\r\n                      {...((column === \"price\" || column === \"qty\") && {\r\n                        className: \"numeric\",\r\n                      })}\r\n                    >\r\n                      {column === \"price\" ? (\r\n                        <NumberFormat\r\n                          format={numberWithCommas}\r\n                          displayType=\"text\"\r\n                          value={isNaN(item[column]) ? 0 : item[column]}\r\n                        />\r\n                      ) : column === \"qty\" && isNaN(item[column]) ? (\r\n                        0\r\n                      ) : column === \"discount\" ? (\r\n                        // item.discount &&\r\n                        // props.state.formInfo.discount !== 0 ? (\r\n                        //   `${props.state.formInfo.discount}%`\r\n                        // ) : (\r\n                        //   \"-\"\r\n                        // )\r\n\r\n                        `${item[column]}%`\r\n                      ) : (\r\n                        item[column]\r\n                      )}\r\n                    </td>\r\n                  );\r\n                return undefined;\r\n              })}\r\n\r\n              {/* Total column */}\r\n\r\n              {props.formState === \"invoice\" && (\r\n                <td className=\"numeric\">\r\n                  <NumberFormat\r\n                    format={numberWithCommas}\r\n                    displayType=\"text\"\r\n                    value={\r\n                      isNaN(item.qty) || isNaN(item.price)\r\n                        ? 0\r\n                        : item.qty * item.price\r\n                    }\r\n                  />\r\n                </td>\r\n              )}\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n      <tfoot>\r\n        {/* Subtotal, Discount, Grand total, Note only on invoice */}\r\n        {props.formState === \"invoice\" && (\r\n          <>\r\n            <tr className=\"numeric\" id=\"subtotal\">\r\n              <td colSpan=\"7\">Subtotal</td>\r\n              <td>{numberWithCommas(props.state.formInfo.subtotal)}</td>\r\n            </tr>\r\n            <tr className=\"numeric\" id=\"discount\">\r\n              <td colSpan=\"7\">\r\n                {/* {`Discount (${props.state.formInfo.discount}%)`} */}\r\n                Diskon\r\n              </td>\r\n              <td>{numberWithCommas(props.state.formInfo.totalDiscount)}</td>\r\n            </tr>\r\n            <tr className=\"numeric\" id=\"grandTotal\">\r\n              <td colSpan=\"7\">Grand total</td>\r\n              <td>\r\n                {numberWithCommas(\r\n                  parseInt(props.state.formInfo.subtotal) -\r\n                    parseInt(props.state.formInfo.totalDiscount)\r\n                )}\r\n              </td>\r\n            </tr>\r\n          </>\r\n        )}\r\n        <tr>\r\n          <td colSpan={props.formState === \"invoice\" ? 9 : 5} id=\"note\">\r\n            Keterangan:&nbsp;\r\n            {props.state.formInfo.note}\r\n          </td>\r\n        </tr>\r\n      </tfoot>\r\n    </table>\r\n  );\r\n};\r\n\r\nconst Footer = (props) => {\r\n  return (\r\n    <footer>\r\n      <SignArea person=\"Penerima\" />\r\n      <SignArea\r\n        person={props.formState === \"invoice\" ? \"Penjual\" : \"Hormat kami\"}\r\n      />\r\n      <SignArea person=\"Checklist\" />\r\n    </footer>\r\n  );\r\n};\r\n\r\nconst SignArea = ({ person }) => {\r\n  return (\r\n    <div className=\"sign\">\r\n      <h3>{person}</h3>\r\n      <span>________________</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { InvoiceToPrint };\r\n","export default __webpack_public_path__ + \"static/media/logo_with_text_rotated.0b99caeb.png\";","import React from \"react\";\r\nimport logo_rotated from \"../assets/logo_with_text_rotated.png\";\r\nimport { numberWithCommas } from \"../helpers/helper.js\";\r\nimport { Row, Col, Layout, Space } from \"antd\";\r\n\r\nconst { Header, Sider, Content } = Layout;\r\n\r\n// const setTextareaString = (text) => {\r\n//   var textareas = document.getElementsByClassName(\"textarea\");\r\n\r\n//   if(textareas !== undefined && text.length > 0 && textareas.length > 0){\r\n//     var words = text.split(\" \");\r\n\r\n//     for(var i=0;i<3;i++){\r\n//       textareas[i].innerHTML = \"&nbsp;\";\r\n//     }\r\n\r\n//     for(var i=0, j=0, count=0; i<words.length;i++){\r\n//       if(words[i].length <= 37){\r\n//         count += words[i].length + 1;\r\n\r\n//         if(count > 45){\r\n//           count = words[i].length;\r\n//           j++;\r\n//         }\r\n\r\n//         textareas[j].append(words[i] + \" \");\r\n//       }else{\r\n//         var splits = words[i].match(/.{1,37}/g);\r\n\r\n//         for(var k=0;k<splits.length;k++){\r\n//           if(count > 0){\r\n//             j++;\r\n//           }\r\n\r\n//           textareas[j+k].append(splits[k] + \" \");\r\n//         }\r\n//       }\r\n//     }\r\n//   }\r\n// }\r\n\r\nclass ReceiptToPrint extends React.PureComponent {\r\n  render() {\r\n    // setTextareaString(this.props.state.formInfo.matter);\r\n    return (\r\n      <Layout\r\n        style={{\r\n          backgroundColor: \"transparent\",\r\n          fontSize: \"1.2em\",\r\n        }}\r\n      >\r\n        <Sider\r\n          width=\"15%\"\r\n          style={{\r\n            backgroundColor: \"transparent\",\r\n            border: \"solid 2mm black\",\r\n            borderStyle: \"double\",\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <img src={logo_rotated} alt=\"logo\" />\r\n        </Sider>\r\n        <Layout\r\n          style={{\r\n            backgroundColor: \"transparent\",\r\n          }}\r\n        >\r\n          <Header\r\n            style={{\r\n              backgroundColor: \"transparent\",\r\n              borderRight: \"solid 0.5mm black\",\r\n              borderTop: \"solid 0.5mm black\",\r\n              borderBottom: \"solid 0.5mm black\",\r\n            }}\r\n          >\r\n            <h1>Kwitansi</h1>\r\n          </Header>\r\n\r\n          <Content\r\n            style={{\r\n              backgroundColor: \"transparent\",\r\n              borderRight: \"solid 0.5mm black\",\r\n              borderBottom: \"solid 0.5mm black\",\r\n              height: \"40%\",\r\n            }}\r\n          >\r\n            <Space\r\n              direction=\"vertical\"\r\n              size=\"small\"\r\n              style={{ width: \"100%\", marginTop: \"1em\", marginBottom: \"1em\" }}\r\n            >\r\n              <Row>\r\n                <Col span=\"5\" offset=\"1\">\r\n                  No. kwitansi\r\n                </Col>\r\n                <Col span=\"1\">:</Col>\r\n                <Col className=\"field\" span=\"15\">\r\n                  {this.props.state.formInfo.receiptNumber}\r\n                </Col>\r\n              </Row>\r\n              <Row align=\"bottom\">\r\n                <Col span=\"5\" offset=\"1\">\r\n                  Sudah terima dari\r\n                </Col>\r\n                <Col span=\"1\">:</Col>\r\n                <Col className=\"field\" span=\"15\">\r\n                  {this.props.state.formInfo.name}\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col span=\"5\" offset=\"1\">\r\n                  Banyaknya uang\r\n                </Col>\r\n                <Col span=\"1\">:</Col>\r\n                <Col className=\"field\" span=\"15\">\r\n                  <div id=\"textarea\">\r\n                    {this.props.state.formInfo.amountWritten}\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col className=\"field\" offset=\"7\" span=\"15\">\r\n                  &nbsp;\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col span=\"5\" offset=\"1\">\r\n                  Untuk pembayaran\r\n                </Col>\r\n                <Col span=\"1\">:</Col>\r\n                <Col className=\"field\" span=\"15\">\r\n                  <div id=\"textarea\">{this.props.state.formInfo.matter}</div>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col className=\"field\" offset=\"7\" span=\"15\">\r\n                  &nbsp;\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col className=\"field\" offset=\"7\" span=\"15\">\r\n                  &nbsp;\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col\r\n                  className=\"field\"\r\n                  offset=\"16\"\r\n                  span=\"5\"\r\n                  style={{ textAlign: \"center\" }}\r\n                >\r\n                  {this.props.state.formInfo.date}\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"footer\">\r\n                <Col offset=\"1\" span=\"4\">\r\n                  Cek / Giro No.\r\n                </Col>\r\n                <Col className=\"field\" span=\"6\">\r\n                  {this.props.state.formInfo.giroNumber}\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"footer\">\r\n                <Col offset=\"1\" span=\"4\">\r\n                  Jumlah\r\n                </Col>\r\n                <Col className=\"field\" span=\"6\">\r\n                  Rp.&nbsp;{numberWithCommas(this.props.state.formInfo.amount)}\r\n                </Col>\r\n                <Col className=\"field\" offset=\"16\" span=\"5\"></Col>\r\n              </Row>\r\n            </Space>\r\n          </Content>\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport { ReceiptToPrint };\r\n","import { calculateSubtotal, calculateDiscount } from \"../helpers/helper.js\";\r\nimport { defaultInvoiceState } from \"../constants/constant.js\";\r\n\r\nexport const invoiceReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_ITEM\": {\r\n      let newItem = action.payload;\r\n\r\n      let dataLength = [...state.tableData].length;\r\n\r\n      let pageSize = state.pagination.pageSize;\r\n\r\n      let current = Math.ceil((dataLength + 1) / pageSize);\r\n\r\n      return {\r\n        ...state,\r\n        tableData: [...state.tableData, newItem],\r\n        pagination: { ...state.pagination, current: current },\r\n      };\r\n    }\r\n    case \"REMOVE_ITEM\": {\r\n      let id = action.payload;\r\n\r\n      let dataCopy = [...state.tableData];\r\n\r\n      let pageCount = Math.ceil(dataCopy.length / state.pagination.pageSize);\r\n\r\n      let newItems = dataCopy.filter((item) => item.id !== id);\r\n\r\n      let subtotal = calculateSubtotal(newItems);\r\n\r\n      let totalDiscount = calculateDiscount(newItems);\r\n\r\n      // reorder id after removing\r\n      for (var i = id - 1; i < newItems.length; i++) {\r\n        newItems[i].id = newItems[i].id - 1;\r\n      }\r\n\r\n      let current = state.pagination.current;\r\n\r\n      // redirect to previous page if the deleted item is the first and only item of last page\r\n      if (\r\n        newItems.length % state.pagination.pageSize === 0 &&\r\n        pageCount === current\r\n      )\r\n        current = current - 1;\r\n      return {\r\n        ...state,\r\n        formInfo: {\r\n          ...state.formInfo,\r\n          subtotal: subtotal,\r\n          totalDiscount: totalDiscount,\r\n        },\r\n        tableData: newItems,\r\n        pagination: { ...state.pagination, current: current },\r\n      };\r\n    }\r\n    case \"REMOVE_ALL\": {\r\n      return {\r\n        ...state,\r\n        tableData: defaultInvoiceState.tableData,\r\n        formInfo: { ...state.formInfo, subtotal: 0, totalDiscount: 0 },\r\n        pagination: {\r\n          ...state.pagination,\r\n          current: 1,\r\n        },\r\n      };\r\n    }\r\n    case \"UPDATE_FORM_INPUT_VALUE\": {\r\n      let newVal = action.payload.value;\r\n      let name = action.payload.name;\r\n\r\n      let dataCopy = { ...state.formInfo };\r\n\r\n      dataCopy[name] = newVal;\r\n\r\n      // if(name === \"discount\"){\r\n      //   dataCopy[\"totalDiscount\"] = calculateDiscount(state.tableData, newVal)\r\n\r\n      //   console.log(dataCopy[\"totalDiscount\"]);\r\n      // }\r\n\r\n      return {\r\n        ...state,\r\n        formInfo: { ...dataCopy },\r\n      };\r\n    }\r\n    case \"UPDATE_TABLE_INPUT_VALUE\": {\r\n      let index = action.payload.index;\r\n      let newVal = action.payload.val;\r\n      let column = action.payload.column;\r\n\r\n      let dataCopy = [...state.tableData];\r\n\r\n      let item = { ...dataCopy[index] };\r\n\r\n      item[column] = newVal;\r\n\r\n      dataCopy[index] = item;\r\n\r\n      let subtotal = calculateSubtotal(dataCopy);\r\n\r\n      let totalDiscount = calculateDiscount(dataCopy);\r\n\r\n      return {\r\n        ...state,\r\n        tableData: [...dataCopy],\r\n        formInfo: {\r\n          ...state.formInfo,\r\n          subtotal: subtotal,\r\n          totalDiscount: totalDiscount,\r\n        },\r\n      };\r\n    }\r\n    case \"CHANGE_PAGE\":\r\n      const newCurrentPage = action.payload;\r\n      return {\r\n        ...state,\r\n        pagination: { ...state.pagination, current: newCurrentPage },\r\n      };\r\n    default:\r\n      throw new Error(\"No matching case found\");\r\n  }\r\n};\r\n","export const receiptReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"UPDATE_FORM_INPUT_VALUE\":\r\n      const newVal = action.payload.value;\r\n      const name = action.payload.name;\r\n\r\n      let dataCopy = { ...state.formInfo };\r\n\r\n      dataCopy[name] = newVal;\r\n\r\n      return { ...state, formInfo: dataCopy };\r\n    default:\r\n      throw new Error(\"No matching case found\");\r\n  }\r\n};\r\n","import { Button, Form, Input, DatePicker, Row, Col } from \"antd\";\r\nimport { useContext } from \"react\";\r\nimport { numberWithCommas } from \"../helpers/helper.js\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport { ReceiptContext } from \"./App.js\";\r\nimport moment from \"moment\";\r\n\r\nconst Receipt = () => {\r\n  const context = useContext(ReceiptContext);\r\n\r\n  const handleFinish = () => {\r\n    localStorage.setItem(\r\n      context.formState,\r\n      context.receiptState.formInfo.receiptNumber\r\n    );\r\n\r\n    context.handleFinish();\r\n  };\r\n\r\n  return (\r\n    <div id=\"kwitansi\">\r\n      <Form layout=\"vertical\" scrollToFirstError onFinish={handleFinish}>\r\n        <Row>\r\n          <Col offset=\"1\" span=\"13\">\r\n            <PayerName />\r\n          </Col>\r\n          <Col offset=\"1\" span=\"8\">\r\n            <ReceiptNumber />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col offset=\"1\" span=\"7\">\r\n            <ReceiptDate />\r\n          </Col>\r\n          <Col flex=\"auto\" pull=\"1\">\r\n            <GiroNumber />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col offset=\"1\" span=\"5\">\r\n            <Amount />\r\n          </Col>\r\n          <Col offset=\"1\" span=\"16\">\r\n            <AmountWritten />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col offset=\"1\" span=\"22\">\r\n            <Matter />\r\n          </Col>\r\n        </Row>\r\n        <Row justify=\"end\">\r\n          <Col pull=\"1\">\r\n            <SubmitButton />\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PayerName = () => {\r\n  const context = useContext(ReceiptContext);\r\n\r\n  return (\r\n    <Form.Item\r\n      name=\"name\"\r\n      label=\"Nama Pembayar\"\r\n      rules={[\r\n        {\r\n          required: true,\r\n          message: \"Nama pembayar tidak boleh kosong\",\r\n        },\r\n      ]}\r\n      initialValue={context.receiptState.formInfo.name}\r\n    >\r\n      <Input\r\n        onBlur={(e) =>\r\n          context.receiptDispatch({\r\n            type: \"UPDATE_FORM_INPUT_VALUE\",\r\n            payload: {\r\n              name: \"name\",\r\n              value: e.target.value,\r\n            },\r\n          })\r\n        }\r\n      />\r\n    </Form.Item>\r\n  );\r\n};\r\n\r\nconst ReceiptNumber = () => {\r\n  const context = useContext(ReceiptContext);\r\n\r\n  return (\r\n    <Form.Item\r\n      name=\"receiptNumber\"\r\n      label=\"Nomor Kwitansi\"\r\n      rules={[\r\n        {\r\n          required: true,\r\n          message: \"Nomor kwitansi tidak boleh kosong\",\r\n        },\r\n      ]}\r\n      initialValue={context.receiptState.formInfo.receiptNumber}\r\n    >\r\n      <Input\r\n        onBlur={(e) =>\r\n          context.receiptDispatch({\r\n            type: \"UPDATE_FORM_INPUT_VALUE\",\r\n            payload: {\r\n              name: \"receiptNumber\",\r\n              value: e.target.value,\r\n            },\r\n          })\r\n        }\r\n      />\r\n    </Form.Item>\r\n  );\r\n};\r\n\r\nconst ReceiptDate = () => {\r\n  const context = useContext(ReceiptContext);\r\n\r\n  return (\r\n    <Form.Item\r\n      name=\"date\"\r\n      label=\"Tanggal\"\r\n      rules={[\r\n        {\r\n          required: true,\r\n          message: \"Tanggal tidak boleh kosong\",\r\n        },\r\n      ]}\r\n      initialValue={moment(context.receiptState.formInfo.date, \"DD-MM-YYYY\")}\r\n    >\r\n      <DatePicker\r\n        format=\"DD-MM-YYYY\"\r\n        onBlur={(e) =>\r\n          context.receiptDispatch({\r\n            type: \"UPDATE_FORM_INPUT_VALUE\",\r\n            payload: {\r\n              name: \"date\",\r\n              value: e.target.value,\r\n            },\r\n          })\r\n        }\r\n      />\r\n    </Form.Item>\r\n  );\r\n};\r\n\r\nconst GiroNumber = () => {\r\n  const context = useContext(ReceiptContext);\r\n\r\n  return (\r\n    <Form.Item\r\n      name=\"giroNumber\"\r\n      label=\"Nomor cek / giro\"\r\n      rules={[\r\n        {\r\n          required: true,\r\n          message: \"Nomor cek / giro tidak boleh kosong\",\r\n        },\r\n      ]}\r\n      initialValue={context.receiptState.formInfo.giroNumber}\r\n    >\r\n      <Input\r\n        onBlur={(e) =>\r\n          context.receiptDispatch({\r\n            type: \"UPDATE_FORM_INPUT_VALUE\",\r\n            payload: {\r\n              name: \"giroNumber\",\r\n              value: e.target.value,\r\n            },\r\n          })\r\n        }\r\n      />\r\n    </Form.Item>\r\n  );\r\n};\r\n\r\nconst Amount = () => {\r\n  const context = useContext(ReceiptContext);\r\n\r\n  return (\r\n    <Form.Item\r\n      name=\"amount\"\r\n      label=\"Jumlah Uang\"\r\n      rules={[\r\n        {\r\n          required: true,\r\n          message: \"Jumlah uang tidak boleh kosong\",\r\n        },\r\n      ]}\r\n      initialValue={context.receiptState.formInfo.amount}\r\n    >\r\n      <NumberFormat\r\n        format={numberWithCommas}\r\n        displayType=\"input\"\r\n        customInput={Input}\r\n        style={{ width: \"100%\" }}\r\n        onValueChange={(values) => {\r\n          const { value } = values;\r\n          context.receiptDispatch({\r\n            type: \"UPDATE_FORM_INPUT_VALUE\",\r\n            payload: {\r\n              value: parseInt(value),\r\n              name: \"amount\",\r\n            },\r\n          });\r\n        }}\r\n      />\r\n    </Form.Item>\r\n  );\r\n};\r\n\r\nconst AmountWritten = () => {\r\n  const context = useContext(ReceiptContext);\r\n\r\n  return (\r\n    <Form.Item\r\n      name=\"amountWritten\"\r\n      label=\"Jumlah Uang (Terbilang)\"\r\n      rules={[\r\n        {\r\n          required: true,\r\n          message: \"Jumlah uang (terbilang) tidak boleh kosong\",\r\n        },\r\n      ]}\r\n      initialValue={context.receiptState.formInfo.amountWritten}\r\n    >\r\n      <Input\r\n        onBlur={(e) =>\r\n          context.receiptDispatch({\r\n            type: \"UPDATE_FORM_INPUT_VALUE\",\r\n            payload: {\r\n              name: \"amountWritten\",\r\n              value: e.target.value,\r\n            },\r\n          })\r\n        }\r\n      />\r\n    </Form.Item>\r\n  );\r\n};\r\n\r\nconst Matter = () => {\r\n  const context = useContext(ReceiptContext);\r\n\r\n  return (\r\n    <Form.Item\r\n      name=\"matter\"\r\n      label=\"Untuk Kepentingan\"\r\n      rules={[\r\n        {\r\n          required: true,\r\n          message: \"Kepentingan tidak boleh kosong\",\r\n        },\r\n      ]}\r\n      initialValue={context.receiptState.formInfo.matter}\r\n    >\r\n      <Input.TextArea\r\n        maxLength={150}\r\n        onBlur={(e) =>\r\n          context.receiptDispatch({\r\n            type: \"UPDATE_FORM_INPUT_VALUE\",\r\n            payload: {\r\n              name: \"matter\",\r\n              value: e.target.value,\r\n            },\r\n          })\r\n        }\r\n      />\r\n    </Form.Item>\r\n  );\r\n};\r\n\r\nconst SubmitButton = () => {\r\n  return (\r\n    <Form.Item style={{ marginBottom: 0 }}>\r\n      <Button type=\"primary\" size=\"large\" htmlType=\"submit\">\r\n        Generate\r\n      </Button>\r\n    </Form.Item>\r\n  );\r\n};\r\n\r\nexport { Receipt };\r\n","import \"../css/App.css\";\r\nimport { invoiceStyle } from \"../css/invoicePrint.js\";\r\nimport { receiptStyle } from \"../css/receiptPrint.js\";\r\nimport { Row, Col, Card, Radio } from \"antd\";\r\nimport { useReactToPrint } from \"react-to-print\";\r\nimport React, { useState, useRef, useReducer } from \"react\";\r\nimport {\r\n  defaultInvoiceState,\r\n  defaultReceiptState,\r\n  defaultColumns,\r\n} from \"../constants/constant\";\r\nimport InvoiceForm from \"./invoiceForm.js\";\r\nimport { InvoiceToPrint } from \"./invoicePrint.js\";\r\nimport { ReceiptToPrint } from \"./receiptPrint.js\";\r\nimport { invoiceReducer } from \"../reducers/invoice.js\";\r\nimport { receiptReducer } from \"../reducers/receipt.js\";\r\nimport { Receipt } from \"./receiptForm.js\";\r\nimport axios from \"axios\";\r\n\r\nconst ReceiptContext = React.createContext();\r\n\r\nconst App = () => {\r\n  const [formState, setFormState] = useState(\"invoice\");\r\n  const [invoiceState, invoiceDispatch] = useReducer(\r\n    invoiceReducer,\r\n    defaultInvoiceState\r\n  );\r\n  const [receiptState, receiptDispatch] = useReducer(\r\n    receiptReducer,\r\n    defaultReceiptState\r\n  );\r\n\r\n  const invoiceToPrint = useRef();\r\n  const receiptToPrint = useRef();\r\n\r\n  const changeForm = (e) => {\r\n    const newOption = e.target.value;\r\n\r\n    setFormState(newOption);\r\n  };\r\n\r\n  const printForm = useReactToPrint(\r\n    formState === \"receipt\"\r\n      ? {\r\n          content: () => receiptToPrint.current,\r\n          pageStyle: receiptStyle,\r\n        }\r\n      : {\r\n          content: () => invoiceToPrint.current,\r\n          pageStyle: invoiceStyle,\r\n        }\r\n  );\r\n\r\n  const handleFinish = () => {\r\n    let data = null;\r\n    let uri = \"\";\r\n\r\n    if (formState !== \"receipt\") {\r\n      data = invoiceState;\r\n      if (formState === \"invoice\") {\r\n        uri = \"/invoiceInsert\";\r\n      } else {\r\n        uri = \"/DOInsert\";\r\n      }\r\n    } else {\r\n      data = receiptState;\r\n      uri = \"/receiptInsert\";\r\n    }\r\n\r\n    data = JSON.stringify(data);\r\n\r\n    // axios\r\n    //   .post(uri, data, {\r\n    //     headers: {\r\n    //       \"Content-Type\": \"application/json\",\r\n    //     },\r\n    //   })\r\n    //   .then(function (response) {\r\n    //     console.log(\"success1\");\r\n    //   });\r\n\r\n    printForm();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ overflow: \"hidden\", height: 0 }}>\r\n        {formState !== \"receipt\" ? (\r\n          <InvoiceToPrint\r\n            ref={invoiceToPrint}\r\n            state={invoiceState}\r\n            formState={formState}\r\n            columns={\r\n              formState === \"invoice\"\r\n                ? defaultColumns.invoiceColumns\r\n                : defaultColumns.deliveryOrderColumns\r\n            }\r\n          />\r\n        ) : (\r\n          <ReceiptToPrint ref={receiptToPrint} state={receiptState} />\r\n        )}\r\n      </div>\r\n      <Row style={{ marginTop: \"1vw\" }}>\r\n        <Col offset=\"2\">\r\n          <Radio.Group\r\n            defaultValue=\"invoice\"\r\n            buttonStyle=\"solid\"\r\n            onChange={changeForm}\r\n          >\r\n            <Radio.Button value=\"invoice\">Faktur Penjualan</Radio.Button>\r\n            <Radio.Button value=\"deliveryOrder\">Surat Jalan</Radio.Button>\r\n            <Radio.Button value=\"receipt\">Kwitansi</Radio.Button>\r\n          </Radio.Group>\r\n        </Col>\r\n        <Col offset=\"3\">\r\n          <h2>\r\n            {formState === \"invoice\" && \"Info Faktur\"}\r\n            {formState === \"deliveryOrder\" && \"Info Surat Jalan\"}\r\n            {formState === \"receipt\" && \"Info Kwitansi\"}\r\n          </h2>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col offset=\"2\" span=\"20\">\r\n          <Card>\r\n            {formState !== \"receipt\" ? (\r\n              <InvoiceForm\r\n                submitHandler={handleFinish}\r\n                state={invoiceState}\r\n                dispatch={invoiceDispatch}\r\n                formState={formState}\r\n                columns={\r\n                  formState === \"invoice\"\r\n                    ? defaultColumns.invoiceColumns\r\n                    : defaultColumns.deliveryOrderColumns\r\n                }\r\n              />\r\n            ) : (\r\n              <ReceiptContext.Provider\r\n                value={{\r\n                  receiptState,\r\n                  receiptDispatch,\r\n                  handleFinish,\r\n                  formState,\r\n                }}\r\n              >\r\n                <Receipt />\r\n              </ReceiptContext.Provider>\r\n            )}\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport { App, ReceiptContext };\r\n","export const receiptStyle = `\r\n    @media print{\r\n      html *{\r\n        font-family: \"Trebuchet MS\";\r\n        font-size: 0.97em;\r\n      }\r\n      \r\n      @page { \r\n        size: 21.59cm 13.97cm;\r\n      }\r\n\r\n      h1 {\r\n        font-size: 2em;\r\n      }\r\n\r\n      #logo{\r\n        \r\n      }\r\n\r\n      .field {\r\n        border-bottom: solid 0.5mm black;\r\n      }\r\n\r\n      #textarea{\r\n        position: absolute;\r\n        word-wrap: break-word;\r\n        line-height: 2.1em;\r\n        top: -1mm;\r\n      }\r\n\r\n      .footer{\r\n        font-size: 0.8em;\r\n      }\r\n    }\r\n`;\r\n","export const invoiceStyle = `\r\n @media print {  \r\n   html *{\r\n      font-family: \"Trebuchet MS\";\r\n    }\r\n      @page { \r\n      size: 21cm 13.97cm;\r\n\r\n    } \r\n    .numeric{\r\n      text-align:right;\r\n    }\r\n    .page-break{\r\n      page-break-after: always;\r\n      display: block;\r\n    }\r\n\r\n    #title{\r\n      text-align: center;\r\n    }\r\n\r\n    .invoice{\r\n      font-size: 0.8em;\r\n      height: 100%;\r\n      width: 100%;\r\n    }\r\n    \r\n    #pageNo{\r\n      padding-left: 10%;\r\n    }\r\n    #buyerCompany{\r\n      width: 66%;\r\n    }\r\n    .column{\r\n      display: inline-block;\r\n      width: 33%;\r\n      margin-bottom: 0.5em;\r\n    }\r\n    \r\n    .info {\r\n      display: table;\r\n    }\r\n    .info h3 {\r\n      display: table-row;\r\n    }\r\n    .info span{\r\n      display: table-cell;\r\n      padding-right: 2mm;\r\n      padding-top: 1.5mm;\r\n    }\r\n     table{\r\n        width: 100%;\r\n        height:18.5em;\r\n        font-size: 1.2em;\r\n        border-top: solid 2pt black;\r\n      }\r\n      table tr{\r\n        height:1em;\r\n      }\r\n      table tbody tr:last-child{\r\n        height:auto !important;\r\n      }\r\n      table td, table th{\r\n        border-left: solid 2pt black;\r\n        border-right: solid 2pt black;\r\n        padding-left: 2pt;\r\n        padding-right: 2pt;\r\n        vertical-align:text-top; \r\n      }\r\n      table th{\r\n        border-bottom: solid 2pt black;\r\n      }\r\n      table #subtotal td {\r\n        border-top: solid 2pt black;\r\n        border-bottom: none;\r\n      } \r\n      table #discount td{\r\n        border-top: none;\r\n        border-bottom: none;\r\n      }\r\n       table #grandTotal td{\r\n         border-bottom: solid 2pt black;\r\n         font-weight: bold;\r\n       }\r\n      table #note{\r\n        height: 1.5em;\r\n        overflow: hidden;\r\n        border-top: none;\r\n        border-bottom: solid 2pt black;\r\n      }\r\n\r\n      h3 {\r\n        line-height:0.8em;\r\n      }\r\n      footer {\r\n        display: flex;\r\n        position:fixed;\r\n        justify-content:center;\r\n        width: 100%;\r\n        bottom: 0;\r\n        margin-top: 0.5em;\r\n        text-align:center;\r\n      }\r\n      .sign:nth-child(2){\r\n        margin-left: 5em;\r\n      }\r\n      \r\n      .sign:last-child{\r\n        margin-left: 5em;\r\n      }\r\n      .sign h3{\r\n        padding-bottom: 1.5em;\r\n      }\r\n  }\r\n  `;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport { App } from \"./pages/App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}